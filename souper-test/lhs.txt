
; Listing all replacements for add_ugly

; *****
; For LLVM instruction:
;  %2 = and i32 %0, 1
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %3 = icmp eq i32 %2, 0
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %5 = and i32 %0, 2
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 0:i1
%3:i32 = and 2:i32, %0
infer %3

; *****
; For LLVM instruction:
;  %6 = icmp eq i32 %5, 0
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 0:i1
%3:i32 = and 2:i32, %0
%4:i1 = eq 0:i32, %3
infer %4

; *****
; For LLVM instruction:
;  %8 = and i32 %0, -4
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 0:i1
%3:i32 = and 2:i32, %0
%4:i1 = eq 0:i32, %3
pc %4 1:i1
%5:i32 = and 4294967292:i32, %0
infer %5

; *****
; For LLVM instruction:
;  %9 = or i32 %8, 2
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 0:i1
%3:i32 = and 2:i32, %0
%4:i1 = eq 0:i32, %3
pc %4 1:i1
%5:i32 = and 4294967292:i32, %0
%6:i32 = or 2:i32, %5
infer %6

; *****
; For LLVM instruction:
;  %11 = or i32 %0, 1
; Generating replacement:
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 1:i1
%3:i32 = or 1:i32, %0
infer %3

; *****
; For LLVM instruction:
;  %13 = phi i32 [ %11, %10 ], [ %9, %7 ], [ 0, %4 ]
; Generating replacement:
%0 = block 3
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i1 = eq 0:i32, %2
blockpc %0 0 %3 1:i1
blockpc %0 1 %3 0:i1
%4:i32 = and 2:i32, %1
%5:i1 = eq 0:i32, %4
blockpc %0 1 %5 1:i1
blockpc %0 2 %3 0:i1
%6:i32 = or 1:i32, %1
%7:i32 = and 4294967292:i32, %1
%8:i32 = or 2:i32, %7
%9:i32 = phi %0, %6, %8, 0:i32
infer %9

; *****
; For LLVM instruction:
;  %14 = and i32 %13, 3
; Generating replacement:
%0 = block 3
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i1 = eq 0:i32, %2
blockpc %0 0 %3 1:i1
blockpc %0 1 %3 0:i1
%4:i32 = and 2:i32, %1
%5:i1 = eq 0:i32, %4
blockpc %0 1 %5 1:i1
blockpc %0 2 %3 0:i1
%6:i32 = or 1:i32, %1
%7:i32 = and 4294967292:i32, %1
%8:i32 = or 2:i32, %7
%9:i32 = phi %0, %6, %8, 0:i32
%10:i32 = and 3:i32, %9
infer %10

; Listing applied replacements for add_ugly
; Using solver: Z3 + internal cache
