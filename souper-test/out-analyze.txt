; starting synthesis for LHS
%0 = block 3
%1:i8 = var
%2:i8 = and 1:i8, %1
%3:i1 = eq 0:i8, %2
blockpc %0 0 %3 1:i1
blockpc %0 1 %3 0:i1
%4:i8 = and 2:i8, %1
%5:i1 = eq 0:i8, %4
blockpc %0 1 %5 1:i1
blockpc %0 2 %3 0:i1
blockpc %0 2 %5 0:i1
%6:i8 = or 1:i8, %1
%7:i8 = and 252:i8, %1
%8:i8 = or 2:i8, %7
%9:i8 = phi %0, %6, %8, 0:i8
%10:i8 = and 3:i8, %9
infer %10
inputs: 1, constants: 2
N: 3, M: 5
default width: 8
output width: 8
component library: add (8, { 8 8 }); and (8, { 8 8 }); 
const components: const (8); const (8); 
I: 0_1 (input,i8) 0_2 (const,i8) 0_3 (const,i8) 
P: 1_1 (add,i8) 1_2 (add,i8) 2_1 (and,i8) 2_2 (and,i8) 
R: 1_0 (add,i8) 2_0 (and,i8) 
L: 0_1 (input,i8) 0_2 (const,i8) 0_3 (const,i8) 1_1 (add,i8) 1_2 (add,i8) 2_1 (and,i8) 2_2 (and,i8) 1_0 (add,i8) 2_0 (and,i8) 3_0 (output,i8) 
O: 3_0 (output,i8)
consistency constraints:
1_0 (add,i8) != 2_0 (and,i8)
acyclicity constraints:
1_1 (add,i8) < 1_0
1_2 (add,i8) < 1_0
2_1 (and,i8) < 2_0
2_2 (and,i8) < 2_0
location variable constraints:
0 <= 1_1 (add,i8) < 5
0 <= 1_2 (add,i8) < 5
0 <= 2_1 (and,i8) < 5
0 <= 2_2 (and,i8) < 5
0 <= 0_1 (input,i8) < 5
0 <= 0_2 (const,i8) < 5
0 <= 0_3 (const,i8) < 5
3 <= 1_0 (add,i8) < 5
3 <= 2_0 (and,i8) < 5
input-definedness constraints:
1_1 (add,i8) == 0_1 (input,i8) || 1_1 (add,i8) == 0_2 (const,i8) || 1_1 (add,i8) == 0_3 (const,i8) || 1_1 (add,i8) == 2_0 (and,i8) || false
1_2 (add,i8) == 0_1 (input,i8) || 1_2 (add,i8) == 0_2 (const,i8) || 1_2 (add,i8) == 0_3 (const,i8) || 1_2 (add,i8) == 2_0 (and,i8) || false
2_1 (and,i8) == 0_1 (input,i8) || 2_1 (and,i8) == 0_2 (const,i8) || 2_1 (and,i8) == 0_3 (const,i8) || 2_1 (and,i8) == 1_0 (add,i8) || false
2_2 (and,i8) == 0_1 (input,i8) || 2_2 (and,i8) == 0_2 (const,i8) || 2_2 (and,i8) == 0_3 (const,i8) || 2_2 (and,i8) == 1_0 (add,i8) || false
component input-to-constant constraints:
1_1 (add,i8) == 0_2 (const,i8) || 1_1 (add,i8) == 0_3 (const,i8) || false
1_2 (add,i8) == 0_2 (const,i8) || 1_2 (add,i8) == 0_3 (const,i8) || false
false
2_1 (and,i8) == 0_2 (const,i8) || 2_1 (and,i8) == 0_3 (const,i8) || false
2_2 (and,i8) == 0_2 (const,i8) || 2_2 (and,i8) == 0_3 (const,i8) || false
false
output-definedness constraints:
3_0 (output,i8) == 0_1 (input,i8) || 3_0 (output,i8) == 0_2 (const,i8) || 3_0 (output,i8) == 0_3 (const,i8) || 3_0 (output,i8) == 1_0 (add,i8) || 3_0 (output,i8) == 2_0 (and,i8) || false
possible wirings:
0_1 (input,i8) == 1_1 (add,i8)
0_1 (input,i8) == 1_2 (add,i8)
0_1 (input,i8) == 2_1 (and,i8)
0_1 (input,i8) == 2_2 (and,i8)
0_1 (input,i8) == 3_0 (output,i8)
0_2 (const,i8) == 1_1 (add,i8)
0_2 (const,i8) == 1_2 (add,i8)
0_2 (const,i8) == 2_1 (and,i8)
0_2 (const,i8) == 2_2 (and,i8)
0_2 (const,i8) == 3_0 (output,i8)
0_3 (const,i8) == 1_1 (add,i8)
0_3 (const,i8) == 1_2 (add,i8)
0_3 (const,i8) == 2_1 (and,i8)
0_3 (const,i8) == 2_2 (and,i8)
0_3 (const,i8) == 3_0 (output,i8)
1_1 (add,i8) == 2_0 (and,i8)
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
2_2 (and,i8) == 1_0 (add,i8)
1_0 (add,i8) == 3_0 (output,i8)
2_0 (and,i8) == 3_0 (output,i8)
synthesizing using 0 component(s)
0 <= 3_0 (output,i8) < 3
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 3_0 (output,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 
found valid wiring, output 0_2 (const,i8).
creating program from wiring
- starting with OutLoc 0_2 (const,i8), OpLocs { }
- creating constant inst 0_2 (const,i8) with value 0
candidate:
result 0:i8
didn't work for all inputs (#cex: 5, refinement: 1)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 0_2 (const,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 3_0 (output,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 2_1 (and,i8) 2_2 (and,i8) 
3	2_0 (and,i8) 
4	1_0 (add,i8) 
found valid wiring, output 0_3 (const,i8).
creating program from wiring
- starting with OutLoc 0_3 (const,i8), OpLocs { }
- creating constant inst 0_3 (const,i8) with value 2
candidate:
result 2:i8
didn't work for all inputs (#cex: 5, refinement: 2)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 0_3 (const,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. UNSAT
synthesizing using 1 component(s)
3 <= 3_0 (output,i8) < 4
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 2_1 (and,i8) 
3	2_0 (and,i8) 3_0 (output,i8) 
4	1_0 (add,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%11:i8 = and 0:i8, %1
result %11
candidate:
result %11
didn't work for all inputs (#cex: 6, refinement: 1)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 2_2 (and,i8) 
3	2_0 (and,i8) 3_0 (output,i8) 
4	1_0 (add,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 6, refinement: 2)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 3_0 (output,i8) 
4	1_0 (add,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 6, refinement: 3)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 3_0 (output,i8) 
4	0_2 (const,i8) 1_0 (add,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 6, refinement: 4)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. UNSAT
synthesizing using 2 component(s)
3 <= 3_0 (output,i8) < 5
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%12:i8 = add %1, %1
result %12
- creating inst and, width 8
before junk removal:
%13:i8 = and 0:i8, %12
result %13
candidate:
result %13
didn't work for all inputs (#cex: 6, refinement: 1)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- creating inst and, width 8
before junk removal:
%14:i8 = and 1:i8, %12
result %14
candidate:
result %14
didn't work for all inputs (#cex: 6, refinement: 2)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- creating inst and, width 8
before junk removal:
result %13
candidate:
result %13
didn't work for all inputs (#cex: 6, refinement: 3)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- creating inst and, width 8
before junk removal:
result %14
candidate:
result %14
didn't work for all inputs (#cex: 6, refinement: 4)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%15:i8 = add 21:i8, %1
result %15
- creating inst and, width 8
before junk removal:
%16:i8 = and 0:i8, %15
result %16
candidate:
result %16
didn't work for all inputs (#cex: 6, refinement: 5)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 21
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_2 (add,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
%17:i8 = add 0:i8, %1
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 6, refinement: 6)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %13
candidate:
result %13
didn't work for all inputs (#cex: 6, refinement: 7)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- creating inst and, width 8
before junk removal:
result %14
candidate:
result %14
didn't work for all inputs (#cex: 6, refinement: 8)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%18:i8 = add 9:i8, %1
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%19:i8 = and 0:i8, %18
result %19
candidate:
result %19
didn't work for all inputs (#cex: 6, refinement: 9)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst and, width 8
before junk removal:
%20:i8 = and 32:i8, %18
result %20
candidate:
result %20
didn't work for all inputs (#cex: 6, refinement: 10)
counterexample: in_0_1 = 56
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%21:i8 = add 14:i8, %1
result %21
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%22:i8 = and 0:i8, %21
result %22
candidate:
result %22
didn't work for all inputs (#cex: 7, refinement: 11)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 14
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %21
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst and, width 8
before junk removal:
%23:i8 = and 32:i8, %21
result %23
candidate:
result %23
didn't work for all inputs (#cex: 7, refinement: 12)
counterexample: in_0_1 = 19
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 14
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_2 (add,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 13)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_1 (add,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 14)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %13
candidate:
result %13
didn't work for all inputs (#cex: 8, refinement: 15)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_1 (add,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 16)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%24:i8 = add 132:i8, %1
result %24
- creating inst and, width 8
before junk removal:
%25:i8 = and 0:i8, %24
result %25
candidate:
result %25
didn't work for all inputs (#cex: 8, refinement: 17)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -124
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 18)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 19)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 20)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %12
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- creating inst and, width 8
before junk removal:
result %14
candidate:
result %14
didn't work for all inputs (#cex: 8, refinement: 21)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 36
- creating inst add, width 8
before junk removal:
%26:i8 = add 36:i8, %1
result %26
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%27:i8 = and 0:i8, %26
result %27
candidate:
result %27
didn't work for all inputs (#cex: 8, refinement: 22)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 36
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- creating inst add, width 8
before junk removal:
result %18
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 8, refinement: 23)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%28:i8 = add 1:i8, %1
result %28
- creating inst and, width 8
before junk removal:
%29:i8 = and 0:i8, %28
result %29
candidate:
result %29
didn't work for all inputs (#cex: 8, refinement: 24)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
%30:i8 = add %11, %11
result %30
candidate:
result %30
didn't work for all inputs (#cex: 8, refinement: 25)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_2 (add,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
%31:i8 = add 0:i8, %11
result %31
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 26)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 10
- creating inst add, width 8
before junk removal:
%32:i8 = add 10:i8, %1
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%33:i8 = and 0:i8, %32
result %33
candidate:
result %33
didn't work for all inputs (#cex: 8, refinement: 27)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 10
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 9
- creating inst add, width 8
before junk removal:
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 8, refinement: 28)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 9
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%34:i8 = add 8:i8, %1
result %34
- creating inst and, width 8
before junk removal:
%35:i8 = and 0:i8, %34
result %35
candidate:
result %35
didn't work for all inputs (#cex: 8, refinement: 29)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 8
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 8, refinement: 30)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
%36:i8 = and 128:i8, %1
result %36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %36
- creating inst add, width 8
before junk removal:
%37:i8 = add %36, %36
result %37
candidate:
result %37
didn't work for all inputs (#cex: 8, refinement: 31)
counterexample: in_0_1 = 2
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 9, refinement: 32)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 9, refinement: 33)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %30
candidate:
result %30
didn't work for all inputs (#cex: 9, refinement: 34)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 9, refinement: 35)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %28
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 9, refinement: 36)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst and, width 8
before junk removal:
result %4
- creating inst add, width 8
before junk removal:
%38:i8 = add 1:i8, %4
result %38
candidate:
result %38
didn't work for all inputs (#cex: 9, refinement: 37)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 38)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 39)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 64
- creating inst add, width 8
before junk removal:
%39:i8 = add 64:i8, %1
result %39
- creating inst and, width 8
before junk removal:
%40:i8 = and 0:i8, %39
result %40
candidate:
result %40
didn't work for all inputs (#cex: 10, refinement: 40)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 64
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 32
- creating inst add, width 8
before junk removal:
%41:i8 = add 32:i8, %1
result %41
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%42:i8 = and 0:i8, %41
result %42
candidate:
result %42
didn't work for all inputs (#cex: 10, refinement: 41)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 32
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- creating inst add, width 8
before junk removal:
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 10, refinement: 42)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 34
- creating inst add, width 8
before junk removal:
%43:i8 = add 34:i8, %1
result %43
- creating inst and, width 8
before junk removal:
%44:i8 = and 0:i8, %43
result %44
candidate:
result %44
didn't work for all inputs (#cex: 10, refinement: 43)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 34
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%45:i8 = add 17:i8, %1
result %45
- creating inst and, width 8
before junk removal:
%46:i8 = and 0:i8, %45
result %46
candidate:
result %46
didn't work for all inputs (#cex: 10, refinement: 44)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 17
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 45)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%47:i8 = add 20:i8, %1
result %47
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%48:i8 = and 0:i8, %47
result %48
candidate:
result %48
didn't work for all inputs (#cex: 10, refinement: 46)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 20
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 38
- creating inst add, width 8
before junk removal:
%49:i8 = add 38:i8, %1
result %49
- creating inst and, width 8
before junk removal:
%50:i8 = and 0:i8, %49
result %50
candidate:
result %50
didn't work for all inputs (#cex: 10, refinement: 47)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 38
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 39
- creating inst add, width 8
before junk removal:
%51:i8 = add 39:i8, %1
result %51
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%52:i8 = and 0:i8, %51
result %52
candidate:
result %52
didn't work for all inputs (#cex: 10, refinement: 48)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 39
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 49)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 18
- creating inst add, width 8
before junk removal:
%53:i8 = add 18:i8, %1
result %53
- creating inst and, width 8
before junk removal:
%54:i8 = and 0:i8, %53
result %54
candidate:
result %54
didn't work for all inputs (#cex: 10, refinement: 50)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 18
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 15
- creating inst add, width 8
before junk removal:
%55:i8 = add 15:i8, %1
result %55
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%56:i8 = and 0:i8, %55
result %56
candidate:
result %56
didn't work for all inputs (#cex: 10, refinement: 51)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 15
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -113
- creating inst add, width 8
before junk removal:
%57:i8 = add 143:i8, %1
result %57
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%58:i8 = and 0:i8, %57
result %58
candidate:
result %58
didn't work for all inputs (#cex: 10, refinement: 52)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -113
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %28
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 10, refinement: 53)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%59:i8 = add 128:i8, %1
result %59
- creating inst and, width 8
before junk removal:
%60:i8 = and 0:i8, %59
result %60
candidate:
result %60
didn't work for all inputs (#cex: 10, refinement: 54)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%61:i8 = add 12:i8, %1
result %61
- creating inst and, width 8
before junk removal:
%62:i8 = and 0:i8, %61
result %62
candidate:
result %62
didn't work for all inputs (#cex: 10, refinement: 55)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 12
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 16
- creating inst add, width 8
before junk removal:
%63:i8 = add 16:i8, %1
result %63
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%64:i8 = and 0:i8, %63
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 56)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 16
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 16
- creating inst add, width 8
before junk removal:
result %63
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 57)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 16
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %17
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 58)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%65:i8 = add 113:i8, %1
result %65
- creating inst and, width 8
before junk removal:
%66:i8 = and 0:i8, %65
result %66
candidate:
result %66
didn't work for all inputs (#cex: 10, refinement: 59)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 113
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%67:i8 = add 48:i8, %1
result %67
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%68:i8 = and 0:i8, %67
result %68
candidate:
result %68
didn't work for all inputs (#cex: 10, refinement: 60)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 48
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%69:i8 = add 29:i8, %1
result %69
- creating inst and, width 8
before junk removal:
%70:i8 = and 0:i8, %69
result %70
candidate:
result %70
didn't work for all inputs (#cex: 10, refinement: 61)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 29
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%71:i8 = add 237:i8, %1
result %71
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%72:i8 = and 0:i8, %71
result %72
candidate:
result %72
didn't work for all inputs (#cex: 10, refinement: 62)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -19
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%73:i8 = add 245:i8, %1
result %73
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%74:i8 = and 0:i8, %73
result %74
candidate:
result %74
didn't work for all inputs (#cex: 10, refinement: 63)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -11
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%75:i8 = add 35:i8, %1
result %75
- creating inst and, width 8
before junk removal:
%76:i8 = and 0:i8, %75
result %76
candidate:
result %76
didn't work for all inputs (#cex: 10, refinement: 64)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 35
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
%77:i8 = add 2:i8, %1
result %77
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%78:i8 = and 0:i8, %77
result %78
candidate:
result %78
didn't work for all inputs (#cex: 10, refinement: 65)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 12
- creating inst add, width 8
before junk removal:
result %61
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 10, refinement: 66)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 12
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %41
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 10, refinement: 67)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 32
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 32
- creating inst add, width 8
before junk removal:
result %41
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 10, refinement: 68)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%79:i8 = add 33:i8, %1
result %79
- creating inst and, width 8
before junk removal:
%80:i8 = and 0:i8, %79
result %80
candidate:
result %80
didn't work for all inputs (#cex: 10, refinement: 69)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 33
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 28
- creating inst add, width 8
before junk removal:
%81:i8 = add 28:i8, %1
result %81
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%82:i8 = and 0:i8, %81
result %82
candidate:
result %82
didn't work for all inputs (#cex: 10, refinement: 70)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 28
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 26
- creating inst add, width 8
before junk removal:
%83:i8 = add 26:i8, %1
result %83
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%84:i8 = and 0:i8, %83
result %84
candidate:
result %84
didn't work for all inputs (#cex: 10, refinement: 71)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 26
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %39
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 10, refinement: 72)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 64
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %63
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 73)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 16
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 74
- creating inst add, width 8
before junk removal:
%85:i8 = add 74:i8, %1
result %85
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%86:i8 = and 0:i8, %85
result %86
candidate:
result %86
didn't work for all inputs (#cex: 10, refinement: 74)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 74
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %63
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 75)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 16
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 31
- creating inst add, width 8
before junk removal:
%87:i8 = add 31:i8, %1
result %87
- creating inst and, width 8
before junk removal:
%88:i8 = and 0:i8, %87
result %88
candidate:
result %88
didn't work for all inputs (#cex: 10, refinement: 76)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 31
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %18
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 10, refinement: 77)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%89:i8 = add 129:i8, %1
result %89
- creating inst and, width 8
before junk removal:
%90:i8 = and 0:i8, %89
result %90
candidate:
result %90
didn't work for all inputs (#cex: 10, refinement: 78)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -127
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 10, refinement: 79)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 34
- creating inst add, width 8
before junk removal:
result %43
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 10, refinement: 80)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 34
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 36
- creating inst add, width 8
before junk removal:
result %26
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 10, refinement: 81)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 36
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 82)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 83)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -9
- creating inst add, width 8
before junk removal:
%91:i8 = add 247:i8, %1
result %91
- creating inst and, width 8
before junk removal:
%92:i8 = and 0:i8, %91
result %92
candidate:
result %92
didn't work for all inputs (#cex: 10, refinement: 84)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -9
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 18
- creating inst add, width 8
before junk removal:
result %53
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 10, refinement: 85)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 18
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 64
- creating inst add, width 8
before junk removal:
result %39
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 10, refinement: 86)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 64
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 38
- creating inst add, width 8
before junk removal:
result %49
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 10, refinement: 87)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 38
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
%93:i8 = add 2:i8, %11
result %93
candidate:
result %93
didn't work for all inputs (#cex: 10, refinement: 88)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 16
- creating inst add, width 8
before junk removal:
result %63
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 89)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 16
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 0_3 (const,i8) 1_1 (add,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 90)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 3
- creating inst add, width 8
before junk removal:
%94:i8 = add 3:i8, %1
result %94
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%95:i8 = and 0:i8, %94
result %95
candidate:
result %95
didn't work for all inputs (#cex: 10, refinement: 91)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 3
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %45
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 10, refinement: 92)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 17
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 0_3 (const,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- creating inst and, width 8
before junk removal:
result %36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- creating inst and, width 8
before junk removal:
result %36
- creating inst add, width 8
before junk removal:
result %37
candidate:
result %37
didn't work for all inputs (#cex: 10, refinement: 93)
counterexample: in_0_1 = 2
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 4
- creating inst add, width 8
before junk removal:
%96:i8 = add 4:i8, %1
result %96
- creating inst and, width 8
before junk removal:
%97:i8 = and 0:i8, %96
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 94)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 4
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- creating inst add, width 8
before junk removal:
result %59
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 10, refinement: 95)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %26
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 10, refinement: 96)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 36
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 96
- creating inst add, width 8
before junk removal:
%98:i8 = add 96:i8, %1
result %98
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%99:i8 = and 0:i8, %98
result %99
candidate:
result %99
didn't work for all inputs (#cex: 10, refinement: 97)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 96
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %26
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 10, refinement: 98)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 36
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 68
- creating inst add, width 8
before junk removal:
%100:i8 = add 68:i8, %1
result %100
- creating inst and, width 8
before junk removal:
%101:i8 = and 0:i8, %100
result %101
candidate:
result %101
didn't work for all inputs (#cex: 10, refinement: 99)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 68
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 16
- creating inst add, width 8
before junk removal:
result %63
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 100)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 16
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 7
- creating inst add, width 8
before junk removal:
%102:i8 = add 7:i8, %1
result %102
- creating inst and, width 8
before junk removal:
%103:i8 = and 0:i8, %102
result %103
candidate:
result %103
didn't work for all inputs (#cex: 10, refinement: 101)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 7
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%104:i8 = add 5:i8, %1
result %104
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%105:i8 = and 0:i8, %104
result %105
candidate:
result %105
didn't work for all inputs (#cex: 10, refinement: 102)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 5
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 35
- creating inst add, width 8
before junk removal:
result %75
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 10, refinement: 103)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 35
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%106:i8 = add 80:i8, %1
result %106
- creating inst and, width 8
before junk removal:
%107:i8 = and 0:i8, %106
result %107
candidate:
result %107
didn't work for all inputs (#cex: 10, refinement: 104)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 80
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %28
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 10, refinement: 105)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%108:i8 = add 27:i8, %1
result %108
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%109:i8 = and 0:i8, %108
result %109
candidate:
result %109
didn't work for all inputs (#cex: 10, refinement: 106)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 27
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %94
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 10, refinement: 107)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 3
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -100
- creating inst add, width 8
before junk removal:
%110:i8 = add 156:i8, %1
result %110
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%111:i8 = and 0:i8, %110
result %111
candidate:
result %111
didn't work for all inputs (#cex: 10, refinement: 108)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -100
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -11
- creating inst add, width 8
before junk removal:
result %73
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 10, refinement: 109)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -11
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %85
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 10, refinement: 110)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 74
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %98
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 10, refinement: 111)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 96
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -11
- creating inst add, width 8
before junk removal:
result %73
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 10, refinement: 112)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -11
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- creating inst add, width 8
before junk removal:
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 10, refinement: 113)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%112:i8 = add 24:i8, %1
result %112
- creating inst and, width 8
before junk removal:
%113:i8 = and 0:i8, %112
result %113
candidate:
result %113
didn't work for all inputs (#cex: 10, refinement: 114)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 24
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 18
- creating inst add, width 8
before junk removal:
result %53
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 10, refinement: 115)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 18
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %81
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 10, refinement: 116)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 28
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %32
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 10, refinement: 117)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %18
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 10, refinement: 118)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 22
- creating inst add, width 8
before junk removal:
%114:i8 = add 22:i8, %1
result %114
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%115:i8 = and 0:i8, %114
result %115
candidate:
result %115
didn't work for all inputs (#cex: 10, refinement: 119)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 22
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %104
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 10, refinement: 120)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 5
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -96
- creating inst add, width 8
before junk removal:
%116:i8 = add 160:i8, %1
result %116
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%117:i8 = and 0:i8, %116
result %117
candidate:
result %117
didn't work for all inputs (#cex: 10, refinement: 121)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -96
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %45
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 10, refinement: 122)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 17
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%118:i8 = add 72:i8, %1
result %118
- creating inst and, width 8
before junk removal:
%119:i8 = and 0:i8, %118
result %119
candidate:
result %119
didn't work for all inputs (#cex: 10, refinement: 123)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 72
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 4
- creating inst add, width 8
before junk removal:
result %96
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 124)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 4
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %45
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 10, refinement: 125)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 17
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %96
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 126)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 4
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %47
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 10, refinement: 127)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 20
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %41
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 10, refinement: 128)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 32
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%120:i8 = add 25:i8, %1
result %120
- creating inst and, width 8
before junk removal:
%121:i8 = and 0:i8, %120
result %121
candidate:
result %121
didn't work for all inputs (#cex: 10, refinement: 129)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 25
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst and, width 8
before junk removal:
result %4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 10, refinement: 130)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %30
candidate:
result %30
didn't work for all inputs (#cex: 10, refinement: 131)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- creating inst and, width 8
before junk removal:
result %36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- creating inst and, width 8
before junk removal:
result %36
- creating inst add, width 8
before junk removal:
result %37
candidate:
result %37
didn't work for all inputs (#cex: 10, refinement: 132)
counterexample: in_0_1 = 2
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 133)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %34
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 10, refinement: 134)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 8
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 66
- creating inst add, width 8
before junk removal:
%122:i8 = add 66:i8, %1
result %122
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%123:i8 = and 0:i8, %122
result %123
candidate:
result %123
didn't work for all inputs (#cex: 10, refinement: 135)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 66
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -68
- creating inst add, width 8
before junk removal:
%124:i8 = add 188:i8, %1
result %124
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%125:i8 = and 0:i8, %124
result %125
candidate:
result %125
didn't work for all inputs (#cex: 10, refinement: 136)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -68
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %39
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 10, refinement: 137)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 64
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 4
- creating inst add, width 8
before junk removal:
result %96
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 138)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 4
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst and, width 8
before junk removal:
%126:i8 = and 32:i8, %32
result %126
candidate:
result %126
didn't work for all inputs (#cex: 10, refinement: 139)
counterexample: in_0_1 = 56
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %120
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 10, refinement: 140)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 25
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 96
- creating inst add, width 8
before junk removal:
result %98
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 10, refinement: 141)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 96
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%127:i8 = add 13:i8, %1
result %127
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%128:i8 = and 0:i8, %127
result %128
candidate:
result %128
didn't work for all inputs (#cex: 10, refinement: 142)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 13
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 10, refinement: 143)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%129:i8 = add 40:i8, %1
result %129
- creating inst and, width 8
before junk removal:
%130:i8 = and 0:i8, %129
result %130
candidate:
result %130
didn't work for all inputs (#cex: 10, refinement: 144)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 40
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 10, refinement: 145)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 8
- creating inst add, width 8
before junk removal:
result %34
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 10, refinement: 146)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 8
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %59
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 10, refinement: 147)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%131:i8 = add 131:i8, %1
result %131
- creating inst and, width 8
before junk removal:
%132:i8 = and 0:i8, %131
result %132
candidate:
result %132
didn't work for all inputs (#cex: 10, refinement: 148)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -125
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %67
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 10, refinement: 149)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 48
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 9
- creating inst add, width 8
before junk removal:
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 32
- creating inst and, width 8
before junk removal:
result %20
candidate:
result %20
didn't work for all inputs (#cex: 10, refinement: 150)
counterexample: in_0_1 = 56
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 9
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %53
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 10, refinement: 151)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 18
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -64
- creating inst add, width 8
before junk removal:
%133:i8 = add 192:i8, %1
result %133
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%134:i8 = and 0:i8, %133
result %134
candidate:
result %134
didn't work for all inputs (#cex: 10, refinement: 152)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -64
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%135:i8 = add 137:i8, %1
result %135
- creating inst and, width 8
before junk removal:
%136:i8 = and 0:i8, %135
result %136
candidate:
result %136
didn't work for all inputs (#cex: 10, refinement: 153)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -119
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 25
- creating inst add, width 8
before junk removal:
result %120
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 10, refinement: 154)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 25
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %77
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 10, refinement: 155)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %43
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 10, refinement: 156)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 34
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- creating inst add, width 8
before junk removal:
result %59
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 10, refinement: 157)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %63
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 10, refinement: 158)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 16
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 66
- creating inst add, width 8
before junk removal:
result %122
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 10, refinement: 159)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 66
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %34
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 10, refinement: 160)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 8
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %79
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 10, refinement: 161)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 33
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %120
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 10, refinement: 162)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 25
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %24
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 10, refinement: 163)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -124
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %116
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 10, refinement: 164)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -96
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %96
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 165)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 4
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%137:i8 = add 144:i8, %1
result %137
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%138:i8 = and 0:i8, %137
result %138
candidate:
result %138
didn't work for all inputs (#cex: 10, refinement: 166)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -112
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %75
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 10, refinement: 167)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 35
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- creating inst add, width 8
before junk removal:
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst and, width 8
before junk removal:
result %126
candidate:
result %126
didn't work for all inputs (#cex: 10, refinement: 168)
counterexample: in_0_1 = 56
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%139:i8 = add 11:i8, %1
result %139
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%140:i8 = and 0:i8, %139
result %140
candidate:
result %140
didn't work for all inputs (#cex: 10, refinement: 169)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 11
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %4
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 10, refinement: 170)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 9
- creating inst add, width 8
before junk removal:
result %18
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 10, refinement: 171)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 9
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %18
- creating inst and, width 8
before junk removal:
result %20
candidate:
result %20
didn't work for all inputs (#cex: 10, refinement: 172)
counterexample: in_0_1 = 56
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 0_3 (const,i8) 1_1 (add,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 173)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %32
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 10, refinement: 174)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 10
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %77
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 10, refinement: 175)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 176)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %77
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 10, refinement: 177)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 120
- creating inst add, width 8
before junk removal:
%141:i8 = add 120:i8, %1
result %141
- creating inst and, width 8
before junk removal:
%142:i8 = and 0:i8, %141
result %142
candidate:
result %142
didn't work for all inputs (#cex: 10, refinement: 178)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 120
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- creating inst add, width 8
before junk removal:
result %59
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 10, refinement: 179)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%143:i8 = add 52:i8, %1
result %143
- creating inst and, width 8
before junk removal:
%144:i8 = and 0:i8, %143
result %144
candidate:
result %144
didn't work for all inputs (#cex: 10, refinement: 180)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 52
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %83
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 10, refinement: 181)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 26
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 80
- creating inst add, width 8
before junk removal:
result %106
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 10, refinement: 182)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 80
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %73
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 10, refinement: 183)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -11
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %122
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 10, refinement: 184)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 66
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %137
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 10, refinement: 185)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -112
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%145:i8 = add 41:i8, %1
result %145
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%146:i8 = and 0:i8, %145
result %146
candidate:
result %146
didn't work for all inputs (#cex: 10, refinement: 186)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 41
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%147:i8 = add 19:i8, %1
result %147
- creating inst and, width 8
before junk removal:
%148:i8 = and 0:i8, %147
result %148
candidate:
result %148
didn't work for all inputs (#cex: 10, refinement: 187)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 19
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %18
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %19
candidate:
result %19
didn't work for all inputs (#cex: 10, refinement: 188)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 9
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 64
- creating inst add, width 8
before junk removal:
result %39
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 10, refinement: 189)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 64
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %43
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 10, refinement: 190)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 34
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%149:i8 = add 148:i8, %1
result %149
- creating inst and, width 8
before junk removal:
%150:i8 = and 0:i8, %149
result %150
candidate:
result %150
didn't work for all inputs (#cex: 10, refinement: 191)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -108
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -126
- creating inst add, width 8
before junk removal:
%151:i8 = add 130:i8, %1
result %151
- creating inst and, width 8
before junk removal:
%152:i8 = and 0:i8, %151
result %152
candidate:
result %152
didn't work for all inputs (#cex: 10, refinement: 192)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -126
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 4
- creating inst add, width 8
before junk removal:
result %96
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 10, refinement: 193)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 4
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -128
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %36
- creating inst add, width 8
before junk removal:
result %37
candidate:
result %37
didn't work for all inputs (#cex: 10, refinement: 194)
counterexample: in_0_1 = 2
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -128
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 112
- creating inst add, width 8
before junk removal:
%153:i8 = add 112:i8, %1
result %153
- creating inst and, width 8
before junk removal:
%154:i8 = and 0:i8, %153
result %154
candidate:
result %154
didn't work for all inputs (#cex: 10, refinement: 195)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 112
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 20
- creating inst add, width 8
before junk removal:
result %47
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 10, refinement: 196)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 20
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%155:i8 = add 145:i8, %1
result %155
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%156:i8 = and 0:i8, %155
result %156
candidate:
result %156
didn't work for all inputs (#cex: 10, refinement: 197)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -111
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 198)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 10, refinement: 199)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 200)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%157:i8 = add 56:i8, %1
result %157
- creating inst and, width 8
before junk removal:
%158:i8 = and 0:i8, %157
result %158
candidate:
result %158
didn't work for all inputs (#cex: 10, refinement: 201)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 56
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -120
- creating inst add, width 8
before junk removal:
%159:i8 = add 136:i8, %1
result %159
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%160:i8 = and 0:i8, %159
result %160
candidate:
result %160
didn't work for all inputs (#cex: 10, refinement: 202)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -120
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 10
- creating inst add, width 8
before junk removal:
result %32
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 10, refinement: 203)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 10
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 17
- creating inst add, width 8
before junk removal:
result %45
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 10, refinement: 204)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 17
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -11
- creating inst add, width 8
before junk removal:
result %73
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 10, refinement: 205)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -11
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 38
- creating inst add, width 8
before junk removal:
result %49
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 10, refinement: 206)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 38
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 10, refinement: 207)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -120
- creating inst add, width 8
before junk removal:
result %159
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 10, refinement: 208)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -120
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 21
- creating inst add, width 8
before junk removal:
result %15
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 10, refinement: 209)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 21
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -112
- creating inst add, width 8
before junk removal:
result %137
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 10, refinement: 210)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -112
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %41
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 10, refinement: 211)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %77
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 10, refinement: 212)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 11
- creating inst add, width 8
before junk removal:
result %139
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 10, refinement: 213)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 11
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%161:i8 = add 253:i8, %1
result %161
- creating inst and, width 8
before junk removal:
%162:i8 = and 0:i8, %161
result %162
candidate:
result %162
didn't work for all inputs (#cex: 10, refinement: 214)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -3
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%163:i8 = add 57:i8, %1
result %163
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%164:i8 = and 0:i8, %163
result %164
candidate:
result %164
didn't work for all inputs (#cex: 10, refinement: 215)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 57
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%165:i8 = add 23:i8, %1
result %165
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%166:i8 = and 0:i8, %165
result %166
candidate:
result %166
didn't work for all inputs (#cex: 10, refinement: 216)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 23
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%167:i8 = add 77:i8, %1
result %167
- creating inst and, width 8
before junk removal:
%168:i8 = and 0:i8, %167
result %168
candidate:
result %168
didn't work for all inputs (#cex: 10, refinement: 217)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 77
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %114
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 10, refinement: 218)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 22
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 11
- creating inst add, width 8
before junk removal:
result %139
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 10, refinement: 219)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 11
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 26
- creating inst add, width 8
before junk removal:
result %83
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 10, refinement: 220)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 26
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 8
- creating inst add, width 8
before junk removal:
result %34
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 10, refinement: 221)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 8
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %61
- creating inst and, width 8
before junk removal:
%169:i8 = and 32:i8, %61
result %169
candidate:
result %169
didn't work for all inputs (#cex: 10, refinement: 222)
counterexample: in_0_1 = 23
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 12
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %21
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 223)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 14
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 72
- creating inst add, width 8
before junk removal:
result %118
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 224)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 72
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -96
- creating inst add, width 8
before junk removal:
result %116
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 225)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -96
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %43
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 11, refinement: 226)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 34
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %87
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 227)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 31
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %63
- creating inst and, width 8
before junk removal:
result %64
candidate:
result %64
didn't work for all inputs (#cex: 11, refinement: 228)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 16
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 25
- creating inst add, width 8
before junk removal:
result %120
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 11, refinement: 229)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 25
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 109
- creating inst add, width 8
before junk removal:
%170:i8 = add 109:i8, %1
result %170
- creating inst and, width 8
before junk removal:
%171:i8 = and 0:i8, %170
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 230)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 109
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 11, refinement: 231)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst add, width 8
before junk removal:
result %41
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 11, refinement: 232)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %100
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 233)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 68
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 74
- creating inst add, width 8
before junk removal:
result %85
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 234)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 74
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%172:i8 = add 50:i8, %1
result %172
- creating inst and, width 8
before junk removal:
%173:i8 = and 0:i8, %172
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 235)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 50
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %116
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 236)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -96
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -64
- creating inst add, width 8
before junk removal:
result %133
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 237)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -64
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 238)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 21
- creating inst add, width 8
before junk removal:
result %15
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 239)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 21
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %43
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 11, refinement: 240)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 34
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %77
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 11, refinement: 241)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %28
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 11, refinement: 242)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %28
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 11, refinement: 243)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -96
- creating inst add, width 8
before junk removal:
result %116
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 244)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -96
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 69
- creating inst add, width 8
before junk removal:
%174:i8 = add 69:i8, %1
result %174
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%175:i8 = and 0:i8, %174
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 245)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 69
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %77
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 11, refinement: 246)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %151
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 247)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -126
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 64
- creating inst add, width 8
before junk removal:
result %39
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 11, refinement: 248)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 64
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%176:i8 = add 37:i8, %1
result %176
- creating inst and, width 8
before junk removal:
%177:i8 = and 0:i8, %176
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 249)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 37
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 86
- creating inst add, width 8
before junk removal:
%178:i8 = add 86:i8, %1
result %178
- creating inst and, width 8
before junk removal:
%179:i8 = and 0:i8, %178
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 250)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 86
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -32
- creating inst add, width 8
before junk removal:
%180:i8 = add 224:i8, %1
result %180
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%181:i8 = and 0:i8, %180
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 251)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -32
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -64
- creating inst add, width 8
before junk removal:
result %133
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 252)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -64
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %77
- creating inst and, width 8
before junk removal:
result %78
candidate:
result %78
didn't work for all inputs (#cex: 11, refinement: 253)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %41
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 11, refinement: 254)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%182:i8 = add 98:i8, %1
result %182
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%183:i8 = and 0:i8, %182
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 255)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 98
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%184:i8 = add 164:i8, %1
result %184
- creating inst and, width 8
before junk removal:
%185:i8 = and 0:i8, %184
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 256)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -92
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 24
- creating inst add, width 8
before junk removal:
result %112
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 257)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 24
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 12
- creating inst add, width 8
before junk removal:
result %61
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 258)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 12
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 102
- creating inst add, width 8
before junk removal:
%186:i8 = add 102:i8, %1
result %186
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%187:i8 = and 0:i8, %186
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 259)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 102
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %96
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 11, refinement: 260)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 4
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%188:i8 = add 70:i8, %1
result %188
- creating inst and, width 8
before junk removal:
%189:i8 = and 0:i8, %188
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 261)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 70
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %67
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 262)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 48
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 12
- creating inst add, width 8
before junk removal:
result %61
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 263)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 12
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %133
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 264)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -64
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %61
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 265)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 12
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %118
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 266)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 72
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- creating inst add, width 8
before junk removal:
result %59
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 11, refinement: 267)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %153
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 268)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 112
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %53
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 11, refinement: 269)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 18
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -124
- creating inst add, width 8
before junk removal:
result %24
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 270)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -124
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %53
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 11, refinement: 271)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 18
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %28
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 11, refinement: 272)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %30
candidate:
result %30
didn't work for all inputs (#cex: 11, refinement: 273)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %96
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %97
candidate:
result %97
didn't work for all inputs (#cex: 11, refinement: 274)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 4
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%190:i8 = add 6:i8, %1
result %190
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%191:i8 = and 0:i8, %190
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 275)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 6
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%192:i8 = add 194:i8, %1
result %192
- creating inst and, width 8
before junk removal:
%193:i8 = and 0:i8, %192
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 276)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -62
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %100
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 277)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 68
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst and, width 8
before junk removal:
result %4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 11, refinement: 278)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%194:i8 = add 100:i8, %1
result %194
- creating inst and, width 8
before junk removal:
%195:i8 = and 0:i8, %194
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 279)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 100
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -32
- creating inst add, width 8
before junk removal:
result %180
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 280)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 40
- creating inst add, width 8
before junk removal:
result %129
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 281)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 40
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %182
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 282)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 98
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%196:i8 = add 161:i8, %1
result %196
- creating inst and, width 8
before junk removal:
%197:i8 = and 0:i8, %196
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 283)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -95
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 5
- creating inst add, width 8
before junk removal:
result %104
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 284)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 5
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%198:i8 = add 163:i8, %1
result %198
- creating inst and, width 8
before junk removal:
%199:i8 = and 0:i8, %198
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 285)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -93
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %39
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 11, refinement: 286)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 64
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %133
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 287)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -64
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%200:i8 = add 65:i8, %1
result %200
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%201:i8 = and 0:i8, %200
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 288)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 65
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 6
- creating inst add, width 8
before junk removal:
result %190
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 289)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 6
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -1
- creating inst add, width 8
before junk removal:
%202:i8 = add 255:i8, %1
result %202
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%203:i8 = and 0:i8, %202
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 290)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -1
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %202
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 291)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -1
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %106
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 292)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 80
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 33
- creating inst add, width 8
before junk removal:
result %79
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 293)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 33
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 67
- creating inst add, width 8
before junk removal:
%204:i8 = add 67:i8, %1
result %204
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%205:i8 = and 0:i8, %204
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 294)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 67
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -17
- creating inst add, width 8
before junk removal:
%206:i8 = add 239:i8, %1
result %206
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%207:i8 = and 0:i8, %206
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 295)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -17
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%208:i8 = add 63:i8, %1
result %208
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%209:i8 = and 0:i8, %208
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 296)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 63
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 32
- creating inst add, width 8
before junk removal:
result %41
- creating inst and, width 8
before junk removal:
result %42
candidate:
result %42
didn't work for all inputs (#cex: 11, refinement: 297)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 8
- creating inst add, width 8
before junk removal:
result %34
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 11, refinement: 298)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 8
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %202
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 299)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -1
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 19
- creating inst add, width 8
before junk removal:
result %147
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 300)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 19
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %106
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 301)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 80
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -88
- creating inst add, width 8
before junk removal:
%210:i8 = add 168:i8, %1
result %210
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%211:i8 = and 0:i8, %210
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 302)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -88
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -113
- creating inst add, width 8
before junk removal:
result %57
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 303)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -113
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %98
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 11, refinement: 304)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 96
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -126
- creating inst add, width 8
before junk removal:
result %151
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 305)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -126
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %129
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 306)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 40
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 307)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 11, refinement: 308)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 12
- creating inst add, width 8
before junk removal:
result %61
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 309)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 12
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 310)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %49
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 11, refinement: 311)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 38
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 11
- creating inst add, width 8
before junk removal:
result %139
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 11, refinement: 312)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 11
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %83
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 11, refinement: 313)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 26
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %194
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 314)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 100
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%212:i8 = add 242:i8, %1
result %212
- creating inst and, width 8
before junk removal:
%213:i8 = and 0:i8, %212
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 315)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -14
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -112
- creating inst add, width 8
before junk removal:
result %137
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 11, refinement: 316)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -112
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%214:i8 = add 44:i8, %1
result %214
- creating inst and, width 8
before junk removal:
%215:i8 = and 0:i8, %214
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 317)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 44
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 17
- creating inst add, width 8
before junk removal:
result %45
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 11, refinement: 318)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 17
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %159
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 319)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -120
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 48
- creating inst add, width 8
before junk removal:
result %67
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 320)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 48
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 74
- creating inst add, width 8
before junk removal:
result %85
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 321)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 74
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 33
- creating inst add, width 8
before junk removal:
result %79
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 322)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 33
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %15
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 323)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 21
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %28
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %29
candidate:
result %29
didn't work for all inputs (#cex: 11, refinement: 324)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 1
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 325)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %120
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 11, refinement: 326)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 25
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %59
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 11, refinement: 327)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%216:i8 = add 42:i8, %1
result %216
- creating inst and, width 8
before junk removal:
%217:i8 = and 0:i8, %216
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 328)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 42
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 42
- creating inst add, width 8
before junk removal:
result %216
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 329)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 42
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- creating inst and, width 8
before junk removal:
result %4
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 11, refinement: 330)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%218:i8 = add 104:i8, %1
result %218
- creating inst and, width 8
before junk removal:
%219:i8 = and 0:i8, %218
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 331)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 104
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%220:i8 = add 84:i8, %1
result %220
- creating inst and, width 8
before junk removal:
%221:i8 = and 0:i8, %220
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 332)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 84
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %147
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 333)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 19
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 20
- creating inst add, width 8
before junk removal:
result %47
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 11, refinement: 334)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 20
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 14
- creating inst add, width 8
before junk removal:
result %21
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 335)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 14
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%222:i8 = add 73:i8, %1
result %222
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%223:i8 = and 0:i8, %222
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 336)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 73
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -80
- creating inst add, width 8
before junk removal:
%224:i8 = add 176:i8, %1
result %224
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%225:i8 = and 0:i8, %224
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 337)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -80
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %200
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 338)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 65
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %180
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 339)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -32
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %216
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 340)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 42
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -122
- creating inst add, width 8
before junk removal:
%226:i8 = add 134:i8, %1
result %226
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%227:i8 = and 0:i8, %226
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 341)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -122
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %122
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 11, refinement: 342)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 66
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %81
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 343)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 28
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 48
- creating inst add, width 8
before junk removal:
result %67
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 344)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 48
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %127
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 345)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 13
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -56
- creating inst add, width 8
before junk removal:
%228:i8 = add 200:i8, %1
result %228
- creating inst and, width 8
before junk removal:
%229:i8 = and 0:i8, %228
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 346)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -56
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 14
- creating inst add, width 8
before junk removal:
result %21
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 347)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 14
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %182
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 348)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 98
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -48
- creating inst add, width 8
before junk removal:
%230:i8 = add 208:i8, %1
result %230
- creating inst and, width 8
before junk removal:
%231:i8 = and 0:i8, %230
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 349)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -48
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 350)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %176
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 351)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 37
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %174
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 352)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 69
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %143
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 353)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 52
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -10
- creating inst add, width 8
before junk removal:
%232:i8 = add 246:i8, %1
result %232
- creating inst and, width 8
before junk removal:
%233:i8 = and 0:i8, %232
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 354)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -10
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 51
- creating inst add, width 8
before junk removal:
%234:i8 = add 51:i8, %1
result %234
- creating inst and, width 8
before junk removal:
%235:i8 = and 0:i8, %234
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 355)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 51
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%236:i8 = add 43:i8, %1
result %236
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%237:i8 = and 0:i8, %236
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 356)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 43
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 17
- creating inst add, width 8
before junk removal:
result %45
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 11, refinement: 357)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 17
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %180
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 358)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -32
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 48
- creating inst add, width 8
before junk removal:
result %67
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 359)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 48
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 40
- creating inst add, width 8
before junk removal:
result %129
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 360)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 40
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 23
- creating inst add, width 8
before junk removal:
result %165
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 361)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 23
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %32
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 11, refinement: 362)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 10
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %200
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 363)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 65
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 3
- creating inst add, width 8
before junk removal:
result %94
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 364)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 3
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %83
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 11, refinement: 365)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 26
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %186
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 366)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 102
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -80
- creating inst add, width 8
before junk removal:
result %224
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 367)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -80
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %153
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 368)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 112
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %112
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 369)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 24
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 72
- creating inst add, width 8
before junk removal:
result %118
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 370)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 72
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 76
- creating inst add, width 8
before junk removal:
%238:i8 = add 76:i8, %1
result %238
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%239:i8 = and 0:i8, %238
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 371)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 76
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 36
- creating inst add, width 8
before junk removal:
result %26
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 11, refinement: 372)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 36
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%240:i8 = add 60:i8, %1
result %240
- creating inst and, width 8
before junk removal:
%241:i8 = and 0:i8, %240
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 373)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 60
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %135
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 374)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -119
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %79
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 375)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 33
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 10
- creating inst add, width 8
before junk removal:
result %32
- creating inst and, width 8
before junk removal:
result %33
candidate:
result %33
didn't work for all inputs (#cex: 11, refinement: 376)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 10
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 22
- creating inst add, width 8
before junk removal:
result %114
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 377)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 22
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 5
- creating inst add, width 8
before junk removal:
result %104
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 378)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 5
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 33
- creating inst add, width 8
before junk removal:
result %79
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 379)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 33
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %222
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 380)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 73
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 13
- creating inst add, width 8
before junk removal:
result %127
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 381)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 13
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 76
- creating inst add, width 8
before junk removal:
result %238
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 382)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 76
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %53
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 11, refinement: 383)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 18
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 82
- creating inst add, width 8
before junk removal:
%242:i8 = add 82:i8, %1
result %242
- creating inst and, width 8
before junk removal:
%243:i8 = and 0:i8, %242
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 384)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 82
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %174
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 385)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 69
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 81
- creating inst add, width 8
before junk removal:
%244:i8 = add 81:i8, %1
result %244
- creating inst and, width 8
before junk removal:
%245:i8 = and 0:i8, %244
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 386)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 81
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -88
- creating inst add, width 8
before junk removal:
result %210
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 387)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -88
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -100
- creating inst add, width 8
before junk removal:
result %110
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 388)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -100
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 34
- creating inst add, width 8
before junk removal:
result %43
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 11, refinement: 389)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 34
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 127
- creating inst add, width 8
before junk removal:
%246:i8 = add 127:i8, %1
result %246
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%247:i8 = and 0:i8, %246
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 390)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 127
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %246
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 391)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 127
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %98
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 11, refinement: 392)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 96
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 6
- creating inst add, width 8
before junk removal:
result %190
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 393)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 6
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%248:i8 = add 106:i8, %1
result %248
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%249:i8 = and 0:i8, %248
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 394)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 106
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 14
- creating inst add, width 8
before junk removal:
result %21
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 395)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 14
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %87
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 396)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 31
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %39
- creating inst and, width 8
before junk removal:
result %40
candidate:
result %40
didn't work for all inputs (#cex: 11, refinement: 397)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 64
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %79
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 398)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 33
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %4
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 11, refinement: 399)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 75
- creating inst add, width 8
before junk removal:
%250:i8 = add 75:i8, %1
result %250
- creating inst and, width 8
before junk removal:
%251:i8 = and 0:i8, %250
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 400)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 75
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 33
- creating inst add, width 8
before junk removal:
result %79
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %80
candidate:
result %80
didn't work for all inputs (#cex: 11, refinement: 401)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 33
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%252:i8 = add 146:i8, %1
result %252
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%253:i8 = and 0:i8, %252
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 402)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -110
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %75
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 11, refinement: 403)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 35
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 11, refinement: 404)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 8
- creating inst add, width 8
before junk removal:
result %34
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 11, refinement: 405)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 8
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 2_1 (and,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst add, width 8
before junk removal:
result %31
candidate:
result %11
didn't work for all inputs (#cex: 11, refinement: 406)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 2_2 (and,i8) 
3	1_2 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 11, refinement: 407)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
1_2 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 2
- creating inst add, width 8
before junk removal:
result %93
candidate:
result %93
didn't work for all inputs (#cex: 11, refinement: 408)
counterexample: in_0_1 = 0
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 28
- creating inst add, width 8
before junk removal:
result %81
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 409)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 28
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_1 (add,i8) 2_0 (and,i8) 
4	1_0 (add,i8) 3_0 (output,i8) 
found valid wiring, output 1_0 (add,i8).
creating program from wiring
- starting with OutLoc 1_0 (add,i8), OpLocs { 1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 3, taking 2_0 (and,i8)
- continue with OutLoc 2_0 (and,i8), OpLocs {2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 2
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst and, width 8
before junk removal:
result %4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 1
- creating inst add, width 8
before junk removal:
result %38
candidate:
result %38
didn't work for all inputs (#cex: 11, refinement: 410)
counterexample: in_0_1 = 3
cand with constants, constraining wiring
3_0 (output,i8) == 1_0 (add,i8)
1_1 (add,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 2
2_2 (and,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 42
- creating inst add, width 8
before junk removal:
result %216
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 411)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 42
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %155
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 412)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -111
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 27
- creating inst add, width 8
before junk removal:
result %108
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 413)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 27
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %24
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 414)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -124
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 68
- creating inst add, width 8
before junk removal:
result %100
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 415)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 68
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %224
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 416)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -80
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -122
- creating inst add, width 8
before junk removal:
result %226
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 417)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -122
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -96
- creating inst add, width 8
before junk removal:
result %116
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 418)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -96
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %176
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 419)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 37
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 30
- creating inst add, width 8
before junk removal:
%254:i8 = add 30:i8, %1
result %254
- creating inst and, width 8
before junk removal:
%255:i8 = and 0:i8, %254
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 420)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 30
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 7
- creating inst add, width 8
before junk removal:
result %102
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 421)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 7
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%256:i8 = add 240:i8, %1
result %256
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%257:i8 = and 0:i8, %256
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 422)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -16
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 19
- creating inst add, width 8
before junk removal:
result %147
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 423)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 19
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%258:i8 = add 49:i8, %1
result %258
- creating inst and, width 8
before junk removal:
%259:i8 = and 0:i8, %258
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 424)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 49
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %244
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 425)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 81
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 35
- creating inst add, width 8
before junk removal:
result %75
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 11, refinement: 426)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 35
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %184
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 427)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -92
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -118
- creating inst add, width 8
before junk removal:
%260:i8 = add 138:i8, %1
result %260
- creating inst and, width 8
before junk removal:
%261:i8 = and 0:i8, %260
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 428)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -118
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %238
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 429)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 76
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%262:i8 = add 71:i8, %1
result %262
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%263:i8 = and 0:i8, %262
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 430)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 71
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %230
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 431)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -48
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -94
- creating inst add, width 8
before junk removal:
%264:i8 = add 162:i8, %1
result %264
- creating inst and, width 8
before junk removal:
%265:i8 = and 0:i8, %264
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 432)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -94
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 6
- creating inst add, width 8
before junk removal:
result %190
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 433)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 6
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%266:i8 = add 125:i8, %1
result %266
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%267:i8 = and 0:i8, %266
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 434)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 125
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -23
- creating inst add, width 8
before junk removal:
%268:i8 = add 233:i8, %1
result %268
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%269:i8 = and 0:i8, %268
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 435)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -23
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -100
- creating inst add, width 8
before junk removal:
result %110
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 436)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -100
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -128
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %59
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %60
candidate:
result %60
didn't work for all inputs (#cex: 11, refinement: 437)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -128
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %214
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 438)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 44
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 21
- creating inst add, width 8
before junk removal:
result %15
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 439)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 21
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 23
- creating inst add, width 8
before junk removal:
result %165
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 440)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 23
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 27
- creating inst add, width 8
before junk removal:
result %108
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 441)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 27
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 100
- creating inst add, width 8
before junk removal:
result %194
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 442)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 100
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 41
- creating inst add, width 8
before junk removal:
result %145
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 443)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 41
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 104
- creating inst add, width 8
before junk removal:
result %218
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 444)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 104
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%270:i8 = add 140:i8, %1
result %270
- creating inst and, width 8
before junk removal:
%271:i8 = and 0:i8, %270
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 445)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -116
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%272:i8 = add 152:i8, %1
result %272
- creating inst and, width 8
before junk removal:
%273:i8 = and 0:i8, %272
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 446)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -104
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 7
- creating inst add, width 8
before junk removal:
result %102
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 447)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 7
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 3
- creating inst add, width 8
before junk removal:
result %94
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 448)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 3
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %260
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 449)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -118
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %83
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 11, refinement: 450)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 26
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %264
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 451)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -94
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 26
- creating inst add, width 8
before junk removal:
result %83
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 11, refinement: 452)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 26
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%274:i8 = add 232:i8, %1
result %274
- creating inst and, width 8
before junk removal:
%275:i8 = and 0:i8, %274
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 453)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -24
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %230
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 454)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -48
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %190
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 455)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 6
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -60
- creating inst add, width 8
before junk removal:
%276:i8 = add 196:i8, %1
result %276
- creating inst and, width 8
before junk removal:
%277:i8 = and 0:i8, %276
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 456)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -60
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 80
- creating inst add, width 8
before junk removal:
result %106
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 457)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 80
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -112
- creating inst add, width 8
before junk removal:
result %137
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 11, refinement: 458)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -112
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 23
- creating inst add, width 8
before junk removal:
result %165
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 459)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 23
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 100
- creating inst add, width 8
before junk removal:
result %194
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 460)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 100
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 5
- creating inst add, width 8
before junk removal:
result %104
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 461)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 5
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -23
- creating inst add, width 8
before junk removal:
result %268
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 462)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -23
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 26
- creating inst add, width 8
before junk removal:
result %83
- creating inst and, width 8
before junk removal:
result %84
candidate:
result %84
didn't work for all inputs (#cex: 11, refinement: 463)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 26
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %218
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 464)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 104
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%278:i8 = add 230:i8, %1
result %278
- creating inst and, width 8
before junk removal:
%279:i8 = and 0:i8, %278
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 465)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -26
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%280:i8 = add 108:i8, %1
result %280
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%281:i8 = and 0:i8, %280
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 466)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 108
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %55
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 467)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 15
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %165
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 468)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 23
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 58
- creating inst add, width 8
before junk removal:
%282:i8 = add 58:i8, %1
result %282
- creating inst and, width 8
before junk removal:
%283:i8 = and 0:i8, %282
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 469)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 58
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %260
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 470)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -118
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %216
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 471)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 42
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %252
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 472)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -110
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -108
- creating inst add, width 8
before junk removal:
result %149
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 473)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -108
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -118
- creating inst add, width 8
before junk removal:
result %260
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 474)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -118
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 98
- creating inst add, width 8
before junk removal:
result %182
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 475)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 98
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %151
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 476)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -126
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %190
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 477)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 6
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 24
- creating inst add, width 8
before junk removal:
result %112
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 478)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 24
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -60
- creating inst add, width 8
before junk removal:
result %276
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 479)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -60
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 23
- creating inst add, width 8
before junk removal:
result %165
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 480)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 23
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 80
- creating inst add, width 8
before junk removal:
result %106
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 481)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 80
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%284:i8 = add 78:i8, %1
result %284
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%285:i8 = and 0:i8, %284
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 482)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 78
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 65
- creating inst add, width 8
before junk removal:
result %200
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 483)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 65
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%286:i8 = add 88:i8, %1
result %286
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%287:i8 = and 0:i8, %286
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 484)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 88
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%288:i8 = add 45:i8, %1
result %288
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%289:i8 = and 0:i8, %288
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 485)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 45
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %61
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 486)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 12
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %220
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 487)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 84
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 42
- creating inst add, width 8
before junk removal:
result %216
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 488)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 42
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %276
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 489)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -60
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %282
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 490)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 58
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %116
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 491)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -96
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %159
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 492)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -120
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 56
- creating inst add, width 8
before junk removal:
result %157
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 493)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 56
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %51
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 494)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 39
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -16
- creating inst add, width 8
before junk removal:
result %256
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 495)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -16
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -95
- creating inst add, width 8
before junk removal:
result %196
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 496)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -95
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%290:i8 = add 135:i8, %1
result %290
- creating inst and, width 8
before junk removal:
%291:i8 = and 0:i8, %290
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 497)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -121
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %104
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 498)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 5
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %69
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 499)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 29
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %157
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 500)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 56
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%292:i8 = add 126:i8, %1
result %292
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%293:i8 = and 0:i8, %292
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 501)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 126
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 61
- creating inst add, width 8
before junk removal:
%294:i8 = add 61:i8, %1
result %294
- creating inst and, width 8
before junk removal:
%295:i8 = and 0:i8, %294
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 502)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 61
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %116
- creating inst and, width 8
before junk removal:
result %117
candidate:
result %117
didn't work for all inputs (#cex: 11, refinement: 503)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -96
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %190
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 504)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 6
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%296:i8 = add 238:i8, %1
result %296
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%297:i8 = and 0:i8, %296
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 505)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -18
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 21
- creating inst add, width 8
before junk removal:
result %15
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 506)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 21
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 58
- creating inst add, width 8
before junk removal:
result %282
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 507)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 58
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 41
- creating inst add, width 8
before junk removal:
result %145
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 508)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 41
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 52
- creating inst add, width 8
before junk removal:
result %143
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 509)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 52
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %114
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 510)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 22
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %282
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 511)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 58
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -86
- creating inst add, width 8
before junk removal:
%298:i8 = add 170:i8, %1
result %298
- creating inst and, width 8
before junk removal:
%299:i8 = and 0:i8, %298
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 512)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -86
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %182
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 513)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 98
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 6
- creating inst add, width 8
before junk removal:
result %190
- creating inst and, width 8
before junk removal:
result %191
candidate:
result %191
didn't work for all inputs (#cex: 11, refinement: 514)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 6
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %272
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 515)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -104
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 52
- creating inst add, width 8
before junk removal:
result %143
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 516)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 52
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 48
- creating inst add, width 8
before junk removal:
result %67
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 517)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 48
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %89
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 518)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -127
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 98
- creating inst add, width 8
before junk removal:
result %182
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 519)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 98
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 40
- creating inst add, width 8
before junk removal:
result %129
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 520)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 40
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 96
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %98
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 11, refinement: 521)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 96
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 90
- creating inst add, width 8
before junk removal:
%300:i8 = add 90:i8, %1
result %300
- creating inst and, width 8
before junk removal:
%301:i8 = and 0:i8, %300
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 522)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 90
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %94
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 523)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 3
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 70
- creating inst add, width 8
before junk removal:
result %188
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 524)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 70
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 20
- creating inst add, width 8
before junk removal:
result %47
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 11, refinement: 525)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 20
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%302:i8 = add 121:i8, %1
result %302
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%303:i8 = and 0:i8, %302
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 526)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 121
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %196
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 527)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -95
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %94
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 528)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 3
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %224
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 529)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -80
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %210
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 530)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -88
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %85
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 531)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 74
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -126
- creating inst add, width 8
before junk removal:
result %151
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 532)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -126
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 70
- creating inst add, width 8
before junk removal:
result %188
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 533)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 70
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -124
- creating inst add, width 8
before junk removal:
result %24
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 534)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -124
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -127
- creating inst add, width 8
before junk removal:
result %89
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 535)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -127
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %228
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 536)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -56
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 112
- creating inst add, width 8
before junk removal:
result %153
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 537)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 112
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %256
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 538)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -16
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %254
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 539)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 30
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %284
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 540)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 78
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %102
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 541)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 7
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %286
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 542)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 88
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 68
- creating inst add, width 8
before junk removal:
result %100
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 543)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 68
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -118
- creating inst add, width 8
before junk removal:
result %260
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 544)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -118
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 47
- creating inst add, width 8
before junk removal:
%304:i8 = add 47:i8, %1
result %304
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%305:i8 = and 0:i8, %304
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 545)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 47
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%306:i8 = add 193:i8, %1
result %306
- creating inst and, width 8
before junk removal:
%307:i8 = and 0:i8, %306
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 546)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -63
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %254
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 547)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 30
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -110
- creating inst add, width 8
before junk removal:
result %252
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 548)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -110
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 82
- creating inst add, width 8
before junk removal:
result %242
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 549)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 82
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 56
- creating inst add, width 8
before junk removal:
result %157
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 550)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 56
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %210
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 551)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -88
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 38
- creating inst add, width 8
before junk removal:
result %49
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 11, refinement: 552)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 38
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %85
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 553)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 74
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %240
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 554)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 60
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%308:i8 = add 178:i8, %1
result %308
- creating inst and, width 8
before junk removal:
%309:i8 = and 0:i8, %308
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 555)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -78
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 73
- creating inst add, width 8
before junk removal:
result %222
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 556)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 73
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %153
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 557)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 112
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 84
- creating inst add, width 8
before junk removal:
result %220
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 558)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 84
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 35
- creating inst add, width 8
before junk removal:
result %75
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 11, refinement: 559)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 35
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %122
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 11, refinement: 560)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 66
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %258
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 561)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 49
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -127
- creating inst add, width 8
before junk removal:
result %89
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 562)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -127
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 20
- creating inst add, width 8
before junk removal:
result %47
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 11, refinement: 563)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 20
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %131
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 564)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -125
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %139
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 11, refinement: 565)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 11
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %112
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 566)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 24
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -48
- creating inst add, width 8
before junk removal:
result %230
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 567)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -48
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 37
- creating inst add, width 8
before junk removal:
result %176
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 568)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 37
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -119
- creating inst add, width 8
before junk removal:
result %135
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 569)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -119
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -95
- creating inst add, width 8
before junk removal:
result %196
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 570)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -95
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 73
- creating inst add, width 8
before junk removal:
result %222
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 571)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 73
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %238
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 572)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 76
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%310:i8 = add 154:i8, %1
result %310
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%311:i8 = and 0:i8, %310
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 573)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -102
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 84
- creating inst add, width 8
before junk removal:
result %220
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 574)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 84
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 50
- creating inst add, width 8
before junk removal:
result %172
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 575)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 50
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -111
- creating inst add, width 8
before junk removal:
result %155
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 576)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -111
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 69
- creating inst add, width 8
before junk removal:
result %174
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 577)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 69
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%312:i8 = add 116:i8, %1
result %312
- creating inst and, width 8
before junk removal:
%313:i8 = and 0:i8, %312
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 578)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 116
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %242
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 579)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 82
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -107
- creating inst add, width 8
before junk removal:
%314:i8 = add 149:i8, %1
result %314
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%315:i8 = and 0:i8, %314
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 580)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -107
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -55
- creating inst add, width 8
before junk removal:
%316:i8 = add 201:i8, %1
result %316
- creating inst and, width 8
before junk removal:
%317:i8 = and 0:i8, %316
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 581)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -55
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%318:i8 = add 89:i8, %1
result %318
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%319:i8 = and 0:i8, %318
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 582)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 89
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %26
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 11, refinement: 583)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 36
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -127
- creating inst add, width 8
before junk removal:
result %89
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 584)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -127
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -16
- creating inst add, width 8
before junk removal:
result %256
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 585)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -16
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 57
- creating inst add, width 8
before junk removal:
result %163
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 586)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 57
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 96
- creating inst add, width 8
before junk removal:
result %98
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 11, refinement: 587)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 96
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 116
- creating inst add, width 8
before junk removal:
result %312
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 588)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 116
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 74
- creating inst add, width 8
before junk removal:
result %85
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 589)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 74
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %264
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 590)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -94
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 30
- creating inst add, width 8
before junk removal:
result %254
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 591)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 30
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 37
- creating inst add, width 8
before junk removal:
result %176
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 592)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 37
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%320:i8 = add 53:i8, %1
result %320
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%321:i8 = and 0:i8, %320
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 593)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 53
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %49
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 11, refinement: 594)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 38
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %127
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 595)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 13
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %34
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %35
candidate:
result %35
didn't work for all inputs (#cex: 11, refinement: 596)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 8
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %61
- creating inst and, width 8
before junk removal:
result %62
candidate:
result %62
didn't work for all inputs (#cex: 11, refinement: 597)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 12
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %204
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 598)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 67
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %188
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 599)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 70
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %165
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 600)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 23
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %188
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 601)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 70
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %102
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 602)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 7
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %170
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 603)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 109
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 54
- creating inst add, width 8
before junk removal:
%322:i8 = add 54:i8, %1
result %322
- creating inst and, width 8
before junk removal:
%323:i8 = and 0:i8, %322
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 604)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 54
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%324:i8 = add 92:i8, %1
result %324
- creating inst and, width 8
before junk removal:
%325:i8 = and 0:i8, %324
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 605)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 92
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%326:i8 = add 97:i8, %1
result %326
- creating inst and, width 8
before junk removal:
%327:i8 = and 0:i8, %326
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 606)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 97
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %294
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 607)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 61
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 62
- creating inst add, width 8
before junk removal:
%328:i8 = add 62:i8, %1
result %328
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%329:i8 = and 0:i8, %328
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 608)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 62
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %172
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 609)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 50
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%330:i8 = add 59:i8, %1
result %330
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%331:i8 = and 0:i8, %330
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 610)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 59
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 86
- creating inst add, width 8
before junk removal:
result %178
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 611)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 86
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -62
- creating inst add, width 8
before junk removal:
result %192
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 612)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -62
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -102
- creating inst add, width 8
before junk removal:
result %310
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 613)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -102
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%332:i8 = add 114:i8, %1
result %332
- creating inst and, width 8
before junk removal:
%333:i8 = and 0:i8, %332
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 614)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 114
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 30
- creating inst add, width 8
before junk removal:
result %254
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 615)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 30
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 44
- creating inst add, width 8
before junk removal:
result %214
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 616)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 44
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %250
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 617)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 75
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 65
- creating inst add, width 8
before junk removal:
result %200
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 618)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 65
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%334:i8 = add 153:i8, %1
result %334
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%335:i8 = and 0:i8, %334
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 619)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -103
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %178
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 620)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 86
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %26
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 11, refinement: 621)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 36
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %47
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 11, refinement: 622)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 20
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %129
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 623)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 40
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 75
- creating inst add, width 8
before junk removal:
result %250
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 624)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 75
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 124
- creating inst add, width 8
before junk removal:
%336:i8 = add 124:i8, %1
result %336
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%337:i8 = and 0:i8, %336
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 625)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 124
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %145
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 626)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 41
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %110
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 627)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -100
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%338:i8 = add 195:i8, %1
result %338
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%339:i8 = and 0:i8, %338
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 628)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -61
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %106
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 629)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 80
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 92
- creating inst add, width 8
before junk removal:
result %324
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 630)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 92
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %260
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 631)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -118
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 46
- creating inst add, width 8
before junk removal:
%340:i8 = add 46:i8, %1
result %340
- creating inst and, width 8
before junk removal:
%341:i8 = and 0:i8, %340
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 632)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 46
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %135
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 633)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -119
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %71
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 634)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -19
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %133
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 635)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -64
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -124
- creating inst add, width 8
before junk removal:
result %24
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 636)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -124
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%342:i8 = add 142:i8, %1
result %342
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%343:i8 = and 0:i8, %342
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 637)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -114
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 3
- creating inst add, width 8
before junk removal:
result %94
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 638)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 3
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 65
- creating inst add, width 8
before junk removal:
result %200
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 639)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 65
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %94
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %95
candidate:
result %95
didn't work for all inputs (#cex: 11, refinement: 640)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 3
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 19
- creating inst add, width 8
before junk removal:
result %147
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 641)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 19
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %89
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 642)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -127
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %184
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 643)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -92
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %51
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 644)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 39
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%344:i8 = add 139:i8, %1
result %344
- creating inst and, width 8
before junk removal:
%345:i8 = and 0:i8, %344
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 645)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -117
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %100
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 646)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 68
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -52
- creating inst add, width 8
before junk removal:
%346:i8 = add 204:i8, %1
result %346
- creating inst and, width 8
before junk removal:
%347:i8 = and 0:i8, %346
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 647)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -52
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 60
- creating inst add, width 8
before junk removal:
result %240
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 648)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 60
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 19
- creating inst add, width 8
before junk removal:
result %147
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 649)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 19
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 88
- creating inst add, width 8
before junk removal:
result %286
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 650)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 88
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 88
- creating inst add, width 8
before junk removal:
result %286
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 651)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 88
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 121
- creating inst add, width 8
before junk removal:
result %302
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 652)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 121
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %242
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 653)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 82
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%348:i8 = add 226:i8, %1
result %348
- creating inst and, width 8
before junk removal:
%349:i8 = and 0:i8, %348
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 654)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -30
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %159
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 655)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -120
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -114
- creating inst add, width 8
before junk removal:
result %342
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 656)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -114
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -92
- creating inst add, width 8
before junk removal:
result %184
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 657)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -92
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 77
- creating inst add, width 8
before junk removal:
result %167
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 658)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 77
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 76
- creating inst add, width 8
before junk removal:
result %238
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 659)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 76
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 100
- creating inst add, width 8
before junk removal:
result %194
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 660)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 100
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -110
- creating inst add, width 8
before junk removal:
result %252
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 661)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -110
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 116
- creating inst add, width 8
before junk removal:
result %312
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 662)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 116
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %276
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 663)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -60
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %270
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 664)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -116
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -56
- creating inst add, width 8
before junk removal:
result %228
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 665)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -56
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %145
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 666)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 41
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %228
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 667)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -56
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %127
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 668)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 13
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %220
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 669)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 84
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %226
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 670)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -122
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 81
- creating inst add, width 8
before junk removal:
result %244
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 671)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 81
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %300
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 672)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 90
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%350:i8 = add 228:i8, %1
result %350
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%351:i8 = and 0:i8, %350
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 673)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -28
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%352:i8 = add 99:i8, %1
result %352
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%353:i8 = and 0:i8, %352
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 674)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 99
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %198
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 675)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -93
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %244
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 676)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 81
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 29
- creating inst add, width 8
before junk removal:
result %69
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 677)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 29
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 15
- creating inst add, width 8
before junk removal:
result %55
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 678)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 15
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %15
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 679)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 21
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -111
- creating inst add, width 8
before junk removal:
result %155
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 680)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -111
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %222
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 681)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 73
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%354:i8 = add 133:i8, %1
result %354
- creating inst and, width 8
before junk removal:
%355:i8 = and 0:i8, %354
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 682)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -123
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -119
- creating inst add, width 8
before junk removal:
result %135
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 683)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -119
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 104
- creating inst add, width 8
before junk removal:
result %218
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 684)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 104
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %180
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 685)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -32
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %260
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 686)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -118
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%356:i8 = add 216:i8, %1
result %356
- creating inst and, width 8
before junk removal:
%357:i8 = and 0:i8, %356
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 687)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -40
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -28
- creating inst add, width 8
before junk removal:
result %350
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 688)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -28
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -116
- creating inst add, width 8
before junk removal:
result %270
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 689)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -116
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %157
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 690)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 56
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %226
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 691)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -122
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %21
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 692)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 14
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 97
- creating inst add, width 8
before junk removal:
result %326
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 693)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 97
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %324
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 694)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 92
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %194
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 695)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 100
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 5
- creating inst add, width 8
before junk removal:
result %104
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 696)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 5
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 60
- creating inst add, width 8
before junk removal:
result %240
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 697)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 60
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %318
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 698)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 89
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %270
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 699)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -116
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -55
- creating inst add, width 8
before junk removal:
result %316
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 700)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -55
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 25
- creating inst add, width 8
before junk removal:
result %120
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 11, refinement: 701)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 25
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -58
- creating inst add, width 8
before junk removal:
%358:i8 = add 198:i8, %1
result %358
- creating inst and, width 8
before junk removal:
%359:i8 = and 0:i8, %358
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 702)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -58
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %332
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 703)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 114
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 34
- creating inst add, width 8
before junk removal:
result %43
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %44
candidate:
result %44
didn't work for all inputs (#cex: 11, refinement: 704)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 34
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -46
- creating inst add, width 8
before junk removal:
%360:i8 = add 210:i8, %1
result %360
- creating inst and, width 8
before junk removal:
%361:i8 = and 0:i8, %360
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 705)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -46
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -104
- creating inst add, width 8
before junk removal:
result %272
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 706)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -104
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 39
- creating inst add, width 8
before junk removal:
result %51
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 707)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 39
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %129
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 708)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 40
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %340
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 709)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 46
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -54
- creating inst add, width 8
before junk removal:
%362:i8 = add 202:i8, %1
result %362
- creating inst and, width 8
before junk removal:
%363:i8 = and 0:i8, %362
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 710)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -54
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %155
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 711)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -111
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%364:i8 = add 184:i8, %1
result %364
- creating inst and, width 8
before junk removal:
%365:i8 = and 0:i8, %364
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 712)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -72
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 14
- creating inst add, width 8
before junk removal:
result %21
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 713)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 14
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %350
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 714)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -28
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%366:i8 = add 105:i8, %1
result %366
- creating inst and, width 8
before junk removal:
%367:i8 = and 0:i8, %366
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 715)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 105
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %149
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 716)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -108
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -102
- creating inst add, width 8
before junk removal:
result %310
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 717)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -102
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %318
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 718)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 89
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %340
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 719)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 46
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %280
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 720)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 108
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 108
- creating inst add, width 8
before junk removal:
result %280
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 721)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 108
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %312
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 722)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 116
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %306
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 723)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -63
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %102
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 724)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 7
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %104
- creating inst and, width 8
before junk removal:
result %105
candidate:
result %105
didn't work for all inputs (#cex: 11, refinement: 725)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 5
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %252
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 726)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -110
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 50
- creating inst add, width 8
before junk removal:
result %172
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 727)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 50
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -123
- creating inst add, width 8
before junk removal:
result %354
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 728)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -123
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 97
- creating inst add, width 8
before junk removal:
result %326
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 729)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 97
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 44
- creating inst add, width 8
before junk removal:
result %214
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 730)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 44
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %141
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 731)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 120
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 44
- creating inst add, width 8
before junk removal:
result %214
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 732)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 44
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %284
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 733)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 78
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %300
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 734)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 90
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %91
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 735)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -9
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %108
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 736)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 27
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -108
- creating inst add, width 8
before junk removal:
result %149
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 737)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -108
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %147
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 738)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 19
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 98
- creating inst add, width 8
before junk removal:
result %182
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 739)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 98
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %336
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 740)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 124
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -4
- creating inst add, width 8
before junk removal:
%368:i8 = add 252:i8, %1
result %368
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%369:i8 = and 0:i8, %368
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 741)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -4
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -125
- creating inst add, width 8
before junk removal:
result %131
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 742)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -125
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %151
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 743)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -126
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 37
- creating inst add, width 8
before junk removal:
result %176
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 744)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 37
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -106
- creating inst add, width 8
before junk removal:
%370:i8 = add 150:i8, %1
result %370
- creating inst and, width 8
before junk removal:
%371:i8 = and 0:i8, %370
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 745)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -106
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %328
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 746)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 62
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %51
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 747)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 39
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -84
- creating inst add, width 8
before junk removal:
%372:i8 = add 172:i8, %1
result %372
- creating inst and, width 8
before junk removal:
%373:i8 = and 0:i8, %372
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 748)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -84
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %139
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 11, refinement: 749)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 11
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 102
- creating inst add, width 8
before junk removal:
result %186
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 750)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 102
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %89
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 751)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -127
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %326
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 752)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 97
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -117
- creating inst add, width 8
before junk removal:
result %344
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 753)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -117
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%374:i8 = add 212:i8, %1
result %374
- creating inst and, width 8
before junk removal:
%375:i8 = and 0:i8, %374
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 754)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -44
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %112
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 755)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 24
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 80
- creating inst add, width 8
before junk removal:
result %106
- creating inst and, width 8
before junk removal:
result %107
candidate:
result %107
didn't work for all inputs (#cex: 11, refinement: 756)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 80
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %346
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 757)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -52
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %344
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 758)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -117
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %139
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 11, refinement: 759)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 11
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -30
- creating inst add, width 8
before junk removal:
result %348
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 760)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -30
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %196
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 761)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -95
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 85
- creating inst add, width 8
before junk removal:
%376:i8 = add 85:i8, %1
result %376
- creating inst and, width 8
before junk removal:
%377:i8 = and 0:i8, %376
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 762)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 85
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %316
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 763)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -55
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %81
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 764)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 28
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%378:i8 = add 166:i8, %1
result %378
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%379:i8 = and 0:i8, %378
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 765)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -90
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %55
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 766)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 15
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%380:i8 = add 141:i8, %1
result %380
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%381:i8 = and 0:i8, %380
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 767)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -115
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%382:i8 = add 101:i8, %1
result %382
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%383:i8 = and 0:i8, %382
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 768)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 101
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %320
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 769)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 53
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 24
- creating inst add, width 8
before junk removal:
result %112
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 770)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 24
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%384:i8 = add 117:i8, %1
result %384
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%385:i8 = and 0:i8, %384
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 771)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 117
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -56
- creating inst add, width 8
before junk removal:
result %228
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 772)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -56
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %163
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 773)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 57
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %344
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 774)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -117
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %186
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 775)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 102
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %108
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 776)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 27
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 78
- creating inst add, width 8
before junk removal:
result %284
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 777)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 78
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %192
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 778)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -62
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %250
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 779)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 75
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -24
- creating inst add, width 8
before junk removal:
result %274
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 780)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -24
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %346
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 781)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -52
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %141
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 782)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 120
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -127
- creating inst add, width 8
before junk removal:
result %89
- creating inst and, width 8
before junk removal:
result %90
candidate:
result %90
didn't work for all inputs (#cex: 11, refinement: 783)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -127
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -91
- creating inst add, width 8
before junk removal:
%386:i8 = add 165:i8, %1
result %386
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%387:i8 = and 0:i8, %386
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 784)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -91
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -76
- creating inst add, width 8
before junk removal:
%388:i8 = add 180:i8, %1
result %388
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%389:i8 = and 0:i8, %388
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 785)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -76
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %354
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 786)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -123
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %336
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 787)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 124
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -44
- creating inst add, width 8
before junk removal:
result %374
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 788)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -44
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 92
- creating inst add, width 8
before junk removal:
result %324
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 789)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 92
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %110
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 790)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -100
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 36
- creating inst add, width 8
before junk removal:
result %26
- creating inst and, width 8
before junk removal:
result %27
candidate:
result %27
didn't work for all inputs (#cex: 11, refinement: 791)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 36
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %248
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 792)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 106
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %322
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 793)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 54
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %172
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 794)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 50
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %298
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 795)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -86
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %236
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 796)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 43
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -40
- creating inst add, width 8
before junk removal:
result %356
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 797)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -40
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %372
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 798)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -84
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 100
- creating inst add, width 8
before junk removal:
result %194
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 799)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 100
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -104
- creating inst add, width 8
before junk removal:
result %272
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 800)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -104
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 86
- creating inst add, width 8
before junk removal:
result %178
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 801)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 86
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%390:i8 = add 93:i8, %1
result %390
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%391:i8 = and 0:i8, %390
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 802)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 93
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %322
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 803)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 54
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %288
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 804)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 45
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %204
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 805)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 67
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -94
- creating inst add, width 8
before junk removal:
result %264
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 806)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -94
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %91
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 807)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -9
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 120
- creating inst add, width 8
before junk removal:
result %141
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 808)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 120
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%392:i8 = add 209:i8, %1
result %392
- creating inst and, width 8
before junk removal:
%393:i8 = and 0:i8, %392
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 809)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -47
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 114
- creating inst add, width 8
before junk removal:
result %332
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 810)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 114
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 62
- creating inst add, width 8
before junk removal:
result %328
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 811)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 62
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 22
- creating inst add, width 8
before junk removal:
result %114
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 812)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 22
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -9
- creating inst add, width 8
before junk removal:
result %91
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 813)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -9
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 17
- creating inst add, width 8
before junk removal:
result %45
- creating inst and, width 8
before junk removal:
result %46
candidate:
result %46
didn't work for all inputs (#cex: 11, refinement: 814)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 17
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -62
- creating inst add, width 8
before junk removal:
result %192
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 815)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -62
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -94
- creating inst add, width 8
before junk removal:
result %264
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 816)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -94
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 78
- creating inst add, width 8
before junk removal:
result %284
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 817)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 78
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%394:i8 = add 177:i8, %1
result %394
- creating inst and, width 8
before junk removal:
%395:i8 = and 0:i8, %394
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 818)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -79
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -116
- creating inst add, width 8
before junk removal:
result %270
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 819)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -116
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 69
- creating inst add, width 8
before junk removal:
result %174
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 820)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 69
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -9
- creating inst add, width 8
before junk removal:
result %91
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 821)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -9
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -92
- creating inst add, width 8
before junk removal:
result %184
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 822)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -92
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %67
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %68
candidate:
result %68
didn't work for all inputs (#cex: 11, refinement: 823)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 48
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%396:i8 = add 94:i8, %1
result %396
- creating inst and, width 8
before junk removal:
%397:i8 = and 0:i8, %396
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 824)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 94
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 49
- creating inst add, width 8
before junk removal:
result %258
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 825)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 49
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -44
- creating inst add, width 8
before junk removal:
result %374
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 826)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -44
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%398:i8 = add 169:i8, %1
result %398
- creating inst and, width 8
before junk removal:
%399:i8 = and 0:i8, %398
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 827)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -87
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %282
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 828)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 58
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -121
- creating inst add, width 8
before junk removal:
result %290
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 829)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -121
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %352
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 830)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 99
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%400:i8 = add 83:i8, %1
result %400
- creating inst and, width 8
before junk removal:
%401:i8 = and 0:i8, %400
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 831)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 83
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %374
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 832)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -44
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 28
- creating inst add, width 8
before junk removal:
result %81
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 833)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 28
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %348
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 834)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -30
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %274
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 835)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -24
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %362
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 836)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -54
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %358
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 837)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -58
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %386
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 838)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -91
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %378
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 839)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -90
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %141
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 840)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 120
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -122
- creating inst add, width 8
before junk removal:
result %226
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 841)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -122
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 39
- creating inst add, width 8
before junk removal:
result %51
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 842)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 39
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 27
- creating inst add, width 8
before junk removal:
result %108
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 843)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 27
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -48
- creating inst add, width 8
before junk removal:
result %230
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 844)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -48
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%402:i8 = add 254:i8, %1
result %402
- creating inst and, width 8
before junk removal:
%403:i8 = and 0:i8, %402
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 845)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -2
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 43
- creating inst add, width 8
before junk removal:
result %236
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 846)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 43
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %314
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 847)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -107
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -126
- creating inst add, width 8
before junk removal:
result %151
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 848)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -126
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 108
- creating inst add, width 8
before junk removal:
result %280
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 849)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 108
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%404:i8 = add 244:i8, %1
result %404
- creating inst and, width 8
before junk removal:
%405:i8 = and 0:i8, %404
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 850)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -12
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %370
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 851)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -106
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -63
- creating inst add, width 8
before junk removal:
result %306
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 852)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -63
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %178
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 853)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 86
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 42
- creating inst add, width 8
before junk removal:
result %216
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 854)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 42
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %328
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 855)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 62
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 13
- creating inst add, width 8
before junk removal:
result %127
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 856)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 13
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %298
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 857)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -86
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 55
- creating inst add, width 8
before junk removal:
%406:i8 = add 55:i8, %1
result %406
- creating inst and, width 8
before junk removal:
%407:i8 = and 0:i8, %406
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 858)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 55
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -24
- creating inst add, width 8
before junk removal:
result %274
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 859)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -24
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 37
- creating inst add, width 8
before junk removal:
result %176
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 860)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 37
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 102
- creating inst add, width 8
before junk removal:
result %186
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 861)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 102
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %342
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 862)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -114
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -98
- creating inst add, width 8
before junk removal:
%408:i8 = add 158:i8, %1
result %408
- creating inst and, width 8
before junk removal:
%409:i8 = and 0:i8, %408
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 863)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -98
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 101
- creating inst add, width 8
before junk removal:
result %382
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 864)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 101
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -111
- creating inst add, width 8
before junk removal:
result %155
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 865)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -111
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -52
- creating inst add, width 8
before junk removal:
result %346
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 866)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -52
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -36
- creating inst add, width 8
before junk removal:
%410:i8 = add 220:i8, %1
result %410
- creating inst and, width 8
before junk removal:
%411:i8 = and 0:i8, %410
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 867)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -36
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -68
- creating inst add, width 8
before junk removal:
result %124
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 868)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -68
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 45
- creating inst add, width 8
before junk removal:
result %288
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 869)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 45
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %310
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 870)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -102
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -63
- creating inst add, width 8
before junk removal:
result %306
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 871)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -63
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 124
- creating inst add, width 8
before junk removal:
result %336
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 872)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 124
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %114
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 873)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 22
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 31
- creating inst add, width 8
before junk removal:
result %87
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 874)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 31
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%412:i8 = add 79:i8, %1
result %412
- creating inst and, width 8
before junk removal:
%413:i8 = and 0:i8, %412
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 875)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 79
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %334
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 876)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -103
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 67
- creating inst add, width 8
before junk removal:
result %204
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 877)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 67
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %310
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 878)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -102
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %316
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 879)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -55
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %358
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 880)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -58
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %234
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 881)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 51
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 90
- creating inst add, width 8
before junk removal:
result %300
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 882)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 90
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 46
- creating inst add, width 8
before junk removal:
result %340
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 883)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 46
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 49
- creating inst add, width 8
before junk removal:
result %258
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 884)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 49
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %264
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 885)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -94
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%414:i8 = add 234:i8, %1
result %414
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%415:i8 = and 0:i8, %414
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 886)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -22
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 27
- creating inst add, width 8
before junk removal:
result %108
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 887)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 27
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %290
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 888)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -121
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 11
- creating inst add, width 8
before junk removal:
result %139
- creating inst and, width 8
before junk removal:
result %140
candidate:
result %140
didn't work for all inputs (#cex: 11, refinement: 889)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 11
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 66
- creating inst add, width 8
before junk removal:
result %122
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 11, refinement: 890)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 66
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -72
- creating inst add, width 8
before junk removal:
result %364
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 891)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -72
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %362
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 892)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -54
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 112
- creating inst add, width 8
before junk removal:
result %153
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 893)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 112
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 106
- creating inst add, width 8
before junk removal:
result %248
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 894)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 106
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -59
- creating inst add, width 8
before junk removal:
%416:i8 = add 197:i8, %1
result %416
- creating inst and, width 8
before junk removal:
%417:i8 = and 0:i8, %416
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 895)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -59
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -40
- creating inst add, width 8
before junk removal:
result %356
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 896)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -40
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -58
- creating inst add, width 8
before junk removal:
result %358
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 897)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -58
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -94
- creating inst add, width 8
before junk removal:
result %264
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 898)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -94
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %308
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 899)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -78
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 53
- creating inst add, width 8
before junk removal:
result %320
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 900)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 53
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 119
- creating inst add, width 8
before junk removal:
%418:i8 = add 119:i8, %1
result %418
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%419:i8 = and 0:i8, %418
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 901)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 119
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 54
- creating inst add, width 8
before junk removal:
result %322
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 902)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 54
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 58
- creating inst add, width 8
before junk removal:
result %282
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 903)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 58
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%420:i8 = add 199:i8, %1
result %420
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%421:i8 = and 0:i8, %420
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 904)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -57
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%422:i8 = add 110:i8, %1
result %422
- creating inst and, width 8
before junk removal:
%423:i8 = and 0:i8, %422
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 905)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 110
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %302
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 906)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 121
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%424:i8 = add 225:i8, %1
result %424
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%425:i8 = and 0:i8, %424
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 907)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -31
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 18
- creating inst add, width 8
before junk removal:
result %53
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %54
candidate:
result %54
didn't work for all inputs (#cex: 11, refinement: 908)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 18
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %81
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 909)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 28
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %326
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 910)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 97
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -75
- creating inst add, width 8
before junk removal:
%426:i8 = add 181:i8, %1
result %426
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%427:i8 = and 0:i8, %426
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 911)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -75
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %21
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %22
candidate:
result %22
didn't work for all inputs (#cex: 11, refinement: 912)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 14
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 98
- creating inst add, width 8
before junk removal:
result %182
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %183
candidate:
result %183
didn't work for all inputs (#cex: 11, refinement: 913)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 98
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %102
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 914)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 7
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 96
- creating inst add, width 8
before junk removal:
result %98
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %99
candidate:
result %99
didn't work for all inputs (#cex: 11, refinement: 915)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 96
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%428:i8 = add 91:i8, %1
result %428
- creating inst and, width 8
before junk removal:
%429:i8 = and 0:i8, %428
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 916)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 91
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%430:i8 = add 147:i8, %1
result %430
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%431:i8 = and 0:i8, %430
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 917)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -109
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %306
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 918)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -63
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %372
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 919)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -84
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %304
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 920)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 47
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %406
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 921)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 55
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -30
- creating inst add, width 8
before junk removal:
result %348
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 922)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -30
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -123
- creating inst add, width 8
before junk removal:
result %354
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 923)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -123
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 114
- creating inst add, width 8
before junk removal:
result %332
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 924)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 114
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %388
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 925)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -76
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%432:i8 = add 236:i8, %1
result %432
- creating inst and, width 8
before junk removal:
%433:i8 = and 0:i8, %432
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 926)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -20
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %167
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 927)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 77
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %200
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 928)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 65
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -120
- creating inst add, width 8
before junk removal:
result %159
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 929)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -120
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 49
- creating inst add, width 8
before junk removal:
result %258
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 930)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 49
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 66
- creating inst add, width 8
before junk removal:
result %122
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 11, refinement: 931)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 66
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -63
- creating inst add, width 8
before junk removal:
result %306
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 932)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -63
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -90
- creating inst add, width 8
before junk removal:
result %378
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 933)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -90
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 50
- creating inst add, width 8
before junk removal:
result %172
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 934)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 50
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 72
- creating inst add, width 8
before junk removal:
result %118
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 935)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 72
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %376
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 936)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 85
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 70
- creating inst add, width 8
before junk removal:
result %188
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 937)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 70
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 41
- creating inst add, width 8
before junk removal:
result %145
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 938)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 41
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -107
- creating inst add, width 8
before junk removal:
result %314
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 939)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -107
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -124
- creating inst add, width 8
before junk removal:
result %24
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 940)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -124
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %364
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 941)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -72
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 106
- creating inst add, width 8
before junk removal:
result %248
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 942)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 106
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %360
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 943)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -46
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -10
- creating inst add, width 8
before junk removal:
result %232
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 944)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -10
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%434:i8 = add 182:i8, %1
result %434
- creating inst and, width 8
before junk removal:
%435:i8 = and 0:i8, %434
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 945)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -74
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -12
- creating inst add, width 8
before junk removal:
result %404
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 946)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -12
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 25
- creating inst add, width 8
before junk removal:
result %120
- creating inst and, width 8
before junk removal:
result %121
candidate:
result %121
didn't work for all inputs (#cex: 11, refinement: 947)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 25
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -76
- creating inst add, width 8
before junk removal:
result %388
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 948)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -76
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 50
- creating inst add, width 8
before junk removal:
result %172
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 949)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 50
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 85
- creating inst add, width 8
before junk removal:
result %376
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 950)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 85
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -106
- creating inst add, width 8
before junk removal:
result %370
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 951)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -106
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %408
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 952)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -98
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %410
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 953)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -36
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -116
- creating inst add, width 8
before junk removal:
result %270
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 954)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -116
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -122
- creating inst add, width 8
before junk removal:
result %226
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 955)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -122
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %122
- creating inst and, width 8
before junk removal:
result %123
candidate:
result %123
didn't work for all inputs (#cex: 11, refinement: 956)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 66
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 77
- creating inst add, width 8
before junk removal:
result %167
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 957)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 77
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %91
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 958)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -9
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %294
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 959)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 61
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 45
- creating inst add, width 8
before junk removal:
result %288
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 960)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 45
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -78
- creating inst add, width 8
before junk removal:
result %308
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 961)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -78
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 61
- creating inst add, width 8
before junk removal:
result %294
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 962)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 61
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -12
- creating inst add, width 8
before junk removal:
result %404
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 963)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -12
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -36
- creating inst add, width 8
before junk removal:
result %410
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 964)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -36
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 55
- creating inst add, width 8
before junk removal:
result %406
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 965)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 55
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %404
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 966)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -12
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 24
- creating inst add, width 8
before junk removal:
result %112
- creating inst and, width 8
before junk removal:
result %113
candidate:
result %113
didn't work for all inputs (#cex: 11, refinement: 967)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 24
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %159
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 968)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -120
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %264
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %265
candidate:
result %265
didn't work for all inputs (#cex: 11, refinement: 969)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -94
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -91
- creating inst add, width 8
before junk removal:
result %386
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 970)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -91
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -47
- creating inst add, width 8
before junk removal:
result %392
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 971)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -47
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 101
- creating inst add, width 8
before junk removal:
result %382
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 972)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 101
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -90
- creating inst add, width 8
before junk removal:
result %378
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 973)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -90
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -108
- creating inst add, width 8
before junk removal:
result %149
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 974)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -108
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %174
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 975)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 69
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -125
- creating inst add, width 8
before junk removal:
result %131
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 976)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -125
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 121
- creating inst add, width 8
before junk removal:
result %302
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 977)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 121
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %366
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 978)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 105
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %340
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 979)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 46
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 22
- creating inst add, width 8
before junk removal:
result %114
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 980)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 22
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %118
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 981)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 72
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %356
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 982)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -40
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -78
- creating inst add, width 8
before junk removal:
result %308
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 983)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -78
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %75
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 11, refinement: 984)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 35
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 120
- creating inst add, width 8
before junk removal:
result %141
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 985)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 120
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -62
- creating inst add, width 8
before junk removal:
result %192
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 986)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -62
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 71
- creating inst add, width 8
before junk removal:
result %262
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 987)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 71
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 113
- creating inst add, width 8
before junk removal:
result %65
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 988)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 113
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %244
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 989)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 81
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%436:i8 = add 214:i8, %1
result %436
- creating inst and, width 8
before junk removal:
%437:i8 = and 0:i8, %436
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 990)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -42
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %24
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %25
candidate:
result %25
didn't work for all inputs (#cex: 11, refinement: 991)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -124
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %430
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 992)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -109
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -11
- creating inst add, width 8
before junk removal:
result %73
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 11, refinement: 993)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -11
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%438:i8 = add 206:i8, %1
result %438
- creating inst and, width 8
before junk removal:
%439:i8 = and 0:i8, %438
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 994)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -50
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -111
- creating inst add, width 8
before junk removal:
result %155
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 995)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -111
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %388
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 996)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -76
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %424
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 997)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -31
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -28
- creating inst add, width 8
before junk removal:
result %350
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 998)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -28
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %47
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %48
candidate:
result %48
didn't work for all inputs (#cex: 11, refinement: 999)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 20
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -46
- creating inst add, width 8
before junk removal:
result %360
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1000)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -46
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 53
- creating inst add, width 8
before junk removal:
result %320
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 1001)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 53
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 106
- creating inst add, width 8
before junk removal:
result %248
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 1002)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 106
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %137
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 11, refinement: 1003)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -112
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -20
- creating inst add, width 8
before junk removal:
result %432
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1004)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -20
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %87
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 1005)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 31
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%440:i8 = add 118:i8, %1
result %440
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%441:i8 = and 0:i8, %440
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1006)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 118
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %65
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1007)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 113
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%442:i8 = add 248:i8, %1
result %442
- creating inst and, width 8
before junk removal:
%443:i8 = and 0:i8, %442
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1008)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -8
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %216
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %217
candidate:
result %217
didn't work for all inputs (#cex: 11, refinement: 1009)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 42
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %438
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1010)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -50
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 15
- creating inst add, width 8
before junk removal:
result %55
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 1011)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 15
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %396
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1012)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 94
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %376
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 1013)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 85
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 121
- creating inst add, width 8
before junk removal:
result %302
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 1014)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 121
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %214
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 1015)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 44
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -86
- creating inst add, width 8
before junk removal:
result %298
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 1016)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -86
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %143
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 1017)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 52
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %410
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 1018)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -36
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -2
- creating inst add, width 8
before junk removal:
result %402
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1019)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -4
- creating inst add, width 8
before junk removal:
result %368
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1020)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -4
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %85
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %86
candidate:
result %86
didn't work for all inputs (#cex: 11, refinement: 1021)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 74
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %314
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 1022)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -107
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %432
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1023)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -20
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %416
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1024)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -59
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %242
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 1025)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 82
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 57
- creating inst add, width 8
before junk removal:
result %163
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 1026)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 57
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %184
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 1027)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -92
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -26
- creating inst add, width 8
before junk removal:
result %278
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1028)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -26
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 108
- creating inst add, width 8
before junk removal:
result %280
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 1029)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 108
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -26
- creating inst add, width 8
before junk removal:
result %278
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1030)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -26
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 35
- creating inst add, width 8
before junk removal:
result %75
- creating inst and, width 8
before junk removal:
result %76
candidate:
result %76
didn't work for all inputs (#cex: 11, refinement: 1031)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 35
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %258
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 1032)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 49
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %137
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 11, refinement: 1033)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -112
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -125
- creating inst add, width 8
before junk removal:
result %131
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 1034)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -125
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -110
- creating inst add, width 8
before junk removal:
result %252
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 1035)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -110
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %268
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1036)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -23
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %382
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 1037)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 101
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %262
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1038)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 71
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %250
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 1039)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 75
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -118
- creating inst add, width 8
before junk removal:
result %260
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %261
candidate:
result %261
didn't work for all inputs (#cex: 11, refinement: 1040)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -118
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %394
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1041)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -79
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %368
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1042)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -4
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %147
- creating inst and, width 8
before junk removal:
result %148
candidate:
result %148
didn't work for all inputs (#cex: 11, refinement: 1043)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 19
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%444:i8 = add 186:i8, %1
result %444
- creating inst and, width 8
before junk removal:
%445:i8 = and 0:i8, %444
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1044)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -70
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %246
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 1045)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 127
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 84
- creating inst add, width 8
before junk removal:
result %220
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 1046)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 84
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %422
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1047)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 110
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 39
- creating inst add, width 8
before junk removal:
result %51
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 1048)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 39
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -55
- creating inst add, width 8
before junk removal:
result %316
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 1049)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -55
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 89
- creating inst add, width 8
before junk removal:
result %318
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 1050)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 89
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%446:i8 = add 217:i8, %1
result %446
- creating inst and, width 8
before junk removal:
%447:i8 = and 0:i8, %446
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1051)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -39
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -112
- creating inst add, width 8
before junk removal:
result %137
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %138
candidate:
result %138
didn't work for all inputs (#cex: 11, refinement: 1052)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -112
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 91
- creating inst add, width 8
before junk removal:
result %428
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1053)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 91
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 51
- creating inst add, width 8
before junk removal:
result %234
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1054)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 51
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 118
- creating inst add, width 8
before junk removal:
result %440
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1055)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 118
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %151
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %152
candidate:
result %152
didn't work for all inputs (#cex: 11, refinement: 1056)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -126
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 13
- creating inst add, width 8
before junk removal:
result %127
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 1057)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 13
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %135
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 1058)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -119
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -103
- creating inst add, width 8
before junk removal:
result %334
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1059)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -103
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %234
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1060)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 51
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -79
- creating inst add, width 8
before junk removal:
result %394
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1061)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -79
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 68
- creating inst add, width 8
before junk removal:
result %100
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 1062)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 68
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -110
- creating inst add, width 8
before junk removal:
result %252
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 1063)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -110
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -119
- creating inst add, width 8
before junk removal:
result %135
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 1064)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -119
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %308
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 1065)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -78
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %390
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1066)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 93
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -22
- creating inst add, width 8
before junk removal:
result %414
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1067)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -22
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 105
- creating inst add, width 8
before junk removal:
result %366
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1068)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 105
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -107
- creating inst add, width 8
before junk removal:
result %314
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 1069)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -107
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 83
- creating inst add, width 8
before junk removal:
result %400
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1070)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 83
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -1
- creating inst add, width 8
before junk removal:
result %202
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 1071)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -84
- creating inst add, width 8
before junk removal:
result %372
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 1072)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -84
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -14
- creating inst add, width 8
before junk removal:
result %212
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1073)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -14
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %57
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1074)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -113
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -125
- creating inst add, width 8
before junk removal:
result %131
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 1075)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -125
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 111
- creating inst add, width 8
before junk removal:
%448:i8 = add 111:i8, %1
result %448
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%449:i8 = and 0:i8, %448
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1076)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 111
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %334
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1077)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -103
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %338
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1078)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -61
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 75
- creating inst add, width 8
before junk removal:
result %250
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 1079)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 75
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 127
- creating inst add, width 8
before junk removal:
result %246
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 1080)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 127
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%450:i8 = add 218:i8, %1
result %450
- creating inst and, width 8
before junk removal:
%451:i8 = and 0:i8, %450
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1081)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -38
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %124
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1082)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -68
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %368
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1083)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -4
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %100
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %101
candidate:
result %101
didn't work for all inputs (#cex: 11, refinement: 1084)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 68
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -121
- creating inst add, width 8
before junk removal:
result %290
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 1085)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -121
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%452:i8 = add 227:i8, %1
result %452
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%453:i8 = and 0:i8, %452
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1086)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -29
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -57
- creating inst add, width 8
before junk removal:
result %420
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1087)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -57
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %226
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 1088)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -122
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -123
- creating inst add, width 8
before junk removal:
result %354
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 1089)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -123
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %118
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 1090)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 72
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%454:i8 = add 205:i8, %1
result %454
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%455:i8 = and 0:i8, %454
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1091)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -51
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 115
- creating inst add, width 8
before junk removal:
%456:i8 = add 115:i8, %1
result %456
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%457:i8 = and 0:i8, %456
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1092)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 115
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %330
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1093)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 59
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 29
- creating inst add, width 8
before junk removal:
result %69
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 1094)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 29
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -70
- creating inst add, width 8
before junk removal:
result %444
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1095)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -70
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -114
- creating inst add, width 8
before junk removal:
result %342
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 1096)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -114
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 103
- creating inst add, width 8
before junk removal:
%458:i8 = add 103:i8, %1
result %458
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%459:i8 = and 0:i8, %458
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1097)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 103
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -8
- creating inst add, width 8
before junk removal:
result %442
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1098)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -8
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %124
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1099)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -68
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %276
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 1100)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -60
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%460:i8 = add 173:i8, %1
result %460
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%461:i8 = and 0:i8, %460
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1101)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -83
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 56
- creating inst add, width 8
before junk removal:
result %157
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 1102)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 56
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %454
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1103)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -51
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %460
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1104)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -83
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %412
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1105)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 79
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 65
- creating inst add, width 8
before junk removal:
result %200
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %201
candidate:
result %201
didn't work for all inputs (#cex: 11, refinement: 1106)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 65
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%462:i8 = add 229:i8, %1
result %462
- creating inst and, width 8
before junk removal:
%463:i8 = and 0:i8, %462
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1107)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -27
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -104
- creating inst add, width 8
before junk removal:
result %272
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 1108)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -104
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -72
- creating inst add, width 8
before junk removal:
result %364
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 1109)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -72
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %208
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1110)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 63
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 104
- creating inst add, width 8
before junk removal:
result %218
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 1111)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 104
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %442
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1112)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -8
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -59
- creating inst add, width 8
before junk removal:
result %416
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1113)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -59
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %228
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 1114)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -56
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%464:i8 = add 167:i8, %1
result %464
- creating inst and, width 8
before junk removal:
%465:i8 = and 0:i8, %464
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1115)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -89
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %224
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 1116)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -80
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 112
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %153
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 1117)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 112
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %400
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1118)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 83
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %354
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 1119)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -123
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -87
- creating inst add, width 8
before junk removal:
result %398
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1120)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -87
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %73
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 11, refinement: 1121)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -11
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %384
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1122)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 117
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %114
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %115
candidate:
result %115
didn't work for all inputs (#cex: 11, refinement: 1123)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 22
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -60
- creating inst add, width 8
before junk removal:
result %276
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 1124)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -60
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -98
- creating inst add, width 8
before junk removal:
result %408
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1125)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -98
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 89
- creating inst add, width 8
before junk removal:
result %318
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 1126)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 89
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %380
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1127)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -115
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 40
- creating inst add, width 8
before junk removal:
result %129
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %130
candidate:
result %130
didn't work for all inputs (#cex: 11, refinement: 1128)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 40
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -8
- creating inst add, width 8
before junk removal:
result %442
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1129)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -8
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %170
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 1130)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 109
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -117
- creating inst add, width 8
before junk removal:
result %344
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 1131)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -117
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%466:i8 = add 203:i8, %1
result %466
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%467:i8 = and 0:i8, %466
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1132)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -53
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 47
- creating inst add, width 8
before junk removal:
result %304
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 1133)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 47
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %406
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 1134)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 55
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %145
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 1135)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 41
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -27
- creating inst add, width 8
before junk removal:
result %462
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1136)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -27
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -103
- creating inst add, width 8
before junk removal:
result %334
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1137)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -103
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%468:i8 = add 185:i8, %1
result %468
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%469:i8 = and 0:i8, %468
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1138)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -71
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -6
- creating inst add, width 8
before junk removal:
%470:i8 = add 250:i8, %1
result %470
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%471:i8 = and 0:i8, %470
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1139)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -6
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -20
- creating inst add, width 8
before junk removal:
result %432
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1140)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -20
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 82
- creating inst add, width 8
before junk removal:
result %242
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 1141)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 82
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %314
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 1142)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -107
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %440
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1143)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 118
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 7
- creating inst add, width 8
before junk removal:
result %102
- creating inst and, width 8
before junk removal:
result %103
candidate:
result %103
didn't work for all inputs (#cex: 11, refinement: 1144)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 7
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 122
- creating inst add, width 8
before junk removal:
%472:i8 = add 122:i8, %1
result %472
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%473:i8 = and 0:i8, %472
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1145)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 122
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 58
- creating inst add, width 8
before junk removal:
result %282
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 1146)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 58
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -54
- creating inst add, width 8
before junk removal:
result %362
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 1147)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -54
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -119
- creating inst add, width 8
before junk removal:
result %135
- creating inst and, width 8
before junk removal:
result %136
candidate:
result %136
didn't work for all inputs (#cex: 11, refinement: 1148)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -119
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %149
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 1149)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -108
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %172
- creating inst and, width 8
before junk removal:
result %173
candidate:
result %173
didn't work for all inputs (#cex: 11, refinement: 1150)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 50
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 70
- creating inst add, width 8
before junk removal:
result %188
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 1151)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 70
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 52
- creating inst add, width 8
before junk removal:
result %143
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 1152)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 52
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %15
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %16
candidate:
result %16
didn't work for all inputs (#cex: 11, refinement: 1153)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 21
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %370
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 1154)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -106
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -74
- creating inst add, width 8
before junk removal:
result %434
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1155)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -74
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -64
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %133
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 1156)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -64
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %408
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1157)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -98
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%474:i8 = add 241:i8, %1
result %474
- creating inst and, width 8
before junk removal:
%475:i8 = and 0:i8, %474
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1158)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -15
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -95
- creating inst add, width 8
before junk removal:
result %196
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 1159)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -95
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%476:i8 = add 249:i8, %1
result %476
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%477:i8 = and 0:i8, %476
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1160)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -7
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 94
- creating inst add, width 8
before junk removal:
result %396
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1161)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 94
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -61
- creating inst add, width 8
before junk removal:
result %338
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1162)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -61
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %448
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1163)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 111
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %428
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1164)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 91
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 52
- creating inst add, width 8
before junk removal:
result %143
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 1165)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 52
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %157
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 1166)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 56
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -92
- creating inst add, width 8
before junk removal:
result %184
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 1167)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -92
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %416
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1168)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -59
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %472
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1169)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 122
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -57
- creating inst add, width 8
before junk removal:
result %420
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1170)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -57
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %456
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1171)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 115
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %360
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1172)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -46
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %392
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1173)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -47
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 73
- creating inst add, width 8
before junk removal:
result %222
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 1174)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 73
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %220
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 1175)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 84
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 119
- creating inst add, width 8
before junk removal:
result %418
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 1176)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 119
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 87
- creating inst add, width 8
before junk removal:
%478:i8 = add 87:i8, %1
result %478
- creating inst and, width 8
before junk removal:
%479:i8 = and 0:i8, %478
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1177)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 87
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %394
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1178)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -79
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %230
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 1179)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -48
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 79
- creating inst add, width 8
before junk removal:
result %412
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1180)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 79
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %131
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 1181)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -125
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%480:i8 = add 222:i8, %1
result %480
- creating inst and, width 8
before junk removal:
%481:i8 = and 0:i8, %480
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1182)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -34
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %326
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 1183)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 97
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%482:i8 = add 95:i8, %1
result %482
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%483:i8 = and 0:i8, %482
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 1184)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 95
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 49
- creating inst add, width 8
before junk removal:
result %258
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 1185)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 49
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %192
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 1186)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -62
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%484:i8 = add 155:i8, %1
result %484
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%485:i8 = and 0:i8, %484
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1187)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -101
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -31
- creating inst add, width 8
before junk removal:
result %424
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1188)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -31
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%486:i8 = add 157:i8, %1
result %486
- creating inst and, width 8
before junk removal:
%487:i8 = and 0:i8, %486
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1189)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -99
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -54
- creating inst add, width 8
before junk removal:
result %362
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 1190)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -54
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %49
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 11, refinement: 1191)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 38
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %452
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1192)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -29
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%488:i8 = add 107:i8, %1
result %488
- creating inst and, width 8
before junk removal:
%489:i8 = and 0:i8, %488
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1193)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 107
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 51
- creating inst add, width 8
before junk removal:
result %234
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1194)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 51
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %266
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 1195)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 125
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %266
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 1196)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 125
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 56
- creating inst add, width 8
before junk removal:
result %157
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %158
candidate:
result %158
didn't work for all inputs (#cex: 11, refinement: 1197)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 56
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %374
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 1198)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -44
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %474
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1199)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -15
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %304
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 1200)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 47
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %458
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1201)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 103
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %240
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 1202)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 60
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 99
- creating inst add, width 8
before junk removal:
result %352
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1203)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 99
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%490:i8 = add 231:i8, %1
result %490
- creating inst and, width 8
before junk removal:
%491:i8 = and 0:i8, %490
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1204)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -25
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %426
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1205)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -75
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 78
- creating inst add, width 8
before junk removal:
result %284
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 1206)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 78
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 94
- creating inst add, width 8
before junk removal:
result %396
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1207)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 94
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %488
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1208)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 107
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %212
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1209)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -14
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -93
- creating inst add, width 8
before junk removal:
result %198
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1210)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -93
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -89
- creating inst add, width 8
before junk removal:
result %464
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1211)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -89
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %478
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1212)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 87
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 43
- creating inst add, width 8
before junk removal:
result %236
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 1213)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 43
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -15
- creating inst add, width 8
before junk removal:
result %474
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1214)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -15
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %278
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1215)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -26
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -42
- creating inst add, width 8
before junk removal:
result %436
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1216)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -42
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -120
- creating inst add, width 8
before junk removal:
result %159
- creating inst and, width 8
before junk removal:
result %160
candidate:
result %160
didn't work for all inputs (#cex: 11, refinement: 1217)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -120
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 89
- creating inst add, width 8
before junk removal:
result %318
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 1218)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 89
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %208
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1219)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 63
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %55
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 1220)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 15
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%492:i8 = add 211:i8, %1
result %492
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%493:i8 = and 0:i8, %492
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1221)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -45
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %414
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1222)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -22
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 106
- creating inst add, width 8
before junk removal:
result %248
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 1223)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 106
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %430
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1224)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -109
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %472
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1225)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 122
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -92
- creating inst add, width 8
before junk removal:
result %184
- creating inst and, width 8
before junk removal:
result %185
candidate:
result %185
didn't work for all inputs (#cex: 11, refinement: 1226)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -92
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 54
- creating inst add, width 8
before junk removal:
result %322
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 1227)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 54
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 28
- creating inst add, width 8
before junk removal:
result %81
- creating inst and, width 8
before junk removal:
result %82
candidate:
result %82
didn't work for all inputs (#cex: 11, refinement: 1228)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 28
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %436
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1229)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -42
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 93
- creating inst add, width 8
before junk removal:
result %390
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1230)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 93
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -10
- creating inst add, width 8
before junk removal:
result %232
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 1231)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -10
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %71
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 1232)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -19
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -82
- creating inst add, width 8
before junk removal:
%494:i8 = add 174:i8, %1
result %494
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%495:i8 = and 0:i8, %494
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1233)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -82
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -32
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %180
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 1234)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -32
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -93
- creating inst add, width 8
before junk removal:
result %198
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1235)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -93
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -64
- creating inst add, width 8
before junk removal:
result %133
- creating inst and, width 8
before junk removal:
result %134
candidate:
result %134
didn't work for all inputs (#cex: 11, refinement: 1236)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -64
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -115
- creating inst add, width 8
before junk removal:
result %380
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1237)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -115
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -85
- creating inst add, width 8
before junk removal:
%496:i8 = add 171:i8, %1
result %496
- creating inst and, width 8
before junk removal:
%497:i8 = and 0:i8, %496
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1238)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -85
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -109
- creating inst add, width 8
before junk removal:
result %430
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1239)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -109
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -38
- creating inst add, width 8
before junk removal:
result %450
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1240)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -38
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -39
- creating inst add, width 8
before junk removal:
result %446
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1241)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -39
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 105
- creating inst add, width 8
before junk removal:
result %366
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1242)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 105
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 90
- creating inst add, width 8
before junk removal:
result %300
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 1243)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 90
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -62
- creating inst add, width 8
before junk removal:
result %192
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 1244)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -62
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %292
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 1245)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 126
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 126
- creating inst add, width 8
before junk removal:
result %292
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 1246)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 126
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 110
- creating inst add, width 8
before junk removal:
result %422
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1247)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 110
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %210
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 1248)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -88
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -39
- creating inst add, width 8
before junk removal:
result %446
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1249)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -39
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%498:i8 = add 213:i8, %1
result %498
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%499:i8 = and 0:i8, %498
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1250)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -43
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -50
- creating inst add, width 8
before junk removal:
result %438
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1251)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -50
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 99
- creating inst add, width 8
before junk removal:
result %352
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1252)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 99
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %149
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 1253)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -108
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %456
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1254)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 115
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -31
- creating inst add, width 8
before junk removal:
result %424
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1255)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -31
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %470
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1256)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -6
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %268
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1257)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -23
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %236
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 1258)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 43
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 88
- creating inst add, width 8
before junk removal:
result %286
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 1259)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 88
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 117
- creating inst add, width 8
before junk removal:
result %384
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1260)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 117
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %348
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 1261)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -30
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -42
- creating inst add, width 8
before junk removal:
result %436
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1262)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -42
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %492
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1263)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -45
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -32
- creating inst add, width 8
before junk removal:
result %180
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 1264)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -32
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 107
- creating inst add, width 8
before junk removal:
result %488
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1265)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 107
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 95
- creating inst add, width 8
before junk removal:
result %482
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 1266)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 95
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %398
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1267)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -87
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%500:i8 = add 123:i8, %1
result %500
- creating inst and, width 8
before junk removal:
%501:i8 = and 0:i8, %500
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 1268)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 123
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -34
- creating inst add, width 8
before junk removal:
result %480
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1269)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -34
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -89
- creating inst add, width 8
before junk removal:
result %464
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1270)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -89
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %448
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1271)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 111
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -56
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %228
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 1272)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -56
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 112
- creating inst add, width 8
before junk removal:
result %153
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %154
candidate:
result %154
didn't work for all inputs (#cex: 11, refinement: 1273)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 112
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %204
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 1274)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 67
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %286
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 1275)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 88
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 69
- creating inst add, width 8
before junk removal:
result %174
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 1276)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 69
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 103
- creating inst add, width 8
before junk removal:
result %458
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1277)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 103
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 110
- creating inst add, width 8
before junk removal:
result %422
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1278)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 110
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -56
- creating inst add, width 8
before junk removal:
result %228
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %229
candidate:
result %229
didn't work for all inputs (#cex: 11, refinement: 1279)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -56
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 116
- creating inst add, width 8
before junk removal:
result %312
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 1280)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 116
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %192
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %193
candidate:
result %193
didn't work for all inputs (#cex: 11, refinement: 1281)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -62
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %418
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 1282)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 119
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -109
- creating inst add, width 8
before junk removal:
result %430
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1283)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -109
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %252
- creating inst and, width 8
before junk removal:
result %253
candidate:
result %253
didn't work for all inputs (#cex: 11, refinement: 1284)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -110
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 101
- creating inst add, width 8
before junk removal:
result %382
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 1285)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 101
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 73
- creating inst add, width 8
before junk removal:
result %222
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 1286)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 73
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %418
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 1287)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 119
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %340
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 1288)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 46
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %470
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1289)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -6
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %306
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 1290)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -63
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 59
- creating inst add, width 8
before junk removal:
result %330
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1291)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 59
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%502:i8 = add 151:i8, %1
result %502
- creating inst and, width 8
before junk removal:
%503:i8 = and 0:i8, %502
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1292)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -105
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 57
- creating inst add, width 8
before junk removal:
result %163
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 1293)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 57
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 122
- creating inst add, width 8
before junk removal:
result %472
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1294)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 122
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %468
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1295)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -71
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -48
- creating inst add, width 8
before junk removal:
result %230
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 1296)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -48
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %494
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1297)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -82
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -88
- creating inst add, width 8
before junk removal:
result %210
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 1298)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -88
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %242
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 1299)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 82
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 92
- creating inst add, width 8
before junk removal:
result %324
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 1300)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 92
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -66
- creating inst add, width 8
before junk removal:
%504:i8 = add 190:i8, %1
result %504
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%505:i8 = and 0:i8, %504
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1301)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -66
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -6
- creating inst add, width 8
before junk removal:
result %470
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1302)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -6
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %494
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1303)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -82
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %500
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 1304)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 123
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 118
- creating inst add, width 8
before junk removal:
result %440
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1305)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 118
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %234
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1306)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 51
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %165
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %166
candidate:
result %166
didn't work for all inputs (#cex: 11, refinement: 1307)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 23
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %176
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %177
candidate:
result %177
didn't work for all inputs (#cex: 11, refinement: 1308)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 37
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 44
- creating inst add, width 8
before junk removal:
result %214
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 1309)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 44
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -29
- creating inst add, width 8
before junk removal:
result %452
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1310)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -29
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %450
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1311)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -38
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 60
- creating inst add, width 8
before junk removal:
result %240
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 1312)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 60
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 113
- creating inst add, width 8
before junk removal:
result %65
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1313)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 113
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 86
- creating inst add, width 8
before junk removal:
result %178
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 1314)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 86
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -117
- creating inst add, width 8
before junk removal:
result %344
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 1315)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -117
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -117
- creating inst add, width 8
before junk removal:
result %344
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 1316)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -117
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -32
- creating inst add, width 8
before junk removal:
result %180
- creating inst and, width 8
before junk removal:
result %181
candidate:
result %181
didn't work for all inputs (#cex: 11, refinement: 1317)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -32
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %434
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1318)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -74
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -88
- creating inst add, width 8
before junk removal:
result %210
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 1319)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -88
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -107
- creating inst add, width 8
before junk removal:
result %314
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 1320)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -107
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %334
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1321)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -103
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 59
- creating inst add, width 8
before junk removal:
result %330
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1322)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 59
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -90
- creating inst add, width 8
before junk removal:
result %378
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 1323)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -90
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 126
- creating inst add, width 8
before junk removal:
result %292
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 1324)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 126
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 102
- creating inst add, width 8
before junk removal:
result %186
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 1325)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 102
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %480
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1326)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -34
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %238
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 1327)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 76
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 82
- creating inst add, width 8
before junk removal:
result %242
- creating inst and, width 8
before junk removal:
result %243
candidate:
result %243
didn't work for all inputs (#cex: 11, refinement: 1328)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 82
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %155
- creating inst and, width 8
before junk removal:
result %156
candidate:
result %156
didn't work for all inputs (#cex: 11, refinement: 1329)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -111
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -58
- creating inst add, width 8
before junk removal:
result %358
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 1330)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -58
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -9
- creating inst add, width 8
before junk removal:
result %91
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 1331)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -9
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %444
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1332)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -70
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 75
- creating inst add, width 8
before junk removal:
result %250
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 1333)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 75
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 43
- creating inst add, width 8
before junk removal:
result %236
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 1334)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 43
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %51
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %52
candidate:
result %52
didn't work for all inputs (#cex: 11, refinement: 1335)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 39
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %174
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %175
candidate:
result %175
didn't work for all inputs (#cex: 11, refinement: 1336)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 69
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 13
- creating inst add, width 8
before junk removal:
result %127
- creating inst and, width 8
before junk removal:
result %128
candidate:
result %128
didn't work for all inputs (#cex: 11, refinement: 1337)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 13
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 67
- creating inst add, width 8
before junk removal:
result %204
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 1338)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 67
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %226
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %227
candidate:
result %227
didn't work for all inputs (#cex: 11, refinement: 1339)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -122
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -108
- creating inst add, width 8
before junk removal:
result %149
- creating inst and, width 8
before junk removal:
result %150
candidate:
result %150
didn't work for all inputs (#cex: 11, refinement: 1340)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -108
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %49
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %50
candidate:
result %50
didn't work for all inputs (#cex: 11, refinement: 1341)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 38
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -90
- creating inst add, width 8
before junk removal:
result %378
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 1342)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -90
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %272
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 1343)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -104
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -2
- creating inst add, width 8
before junk removal:
result %402
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1344)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -2
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -14
- creating inst add, width 8
before junk removal:
result %212
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1345)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -14
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -60
- creating inst add, width 8
before junk removal:
result %276
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 1346)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -60
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 123
- creating inst add, width 8
before junk removal:
result %500
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 1347)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 123
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %202
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 1348)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -1
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %402
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1349)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -2
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %143
- creating inst and, width 8
before junk removal:
result %144
candidate:
result %144
didn't work for all inputs (#cex: 11, refinement: 1350)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 52
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %394
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1351)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -79
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 97
- creating inst add, width 8
before junk removal:
result %326
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 1352)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 97
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -105
- creating inst add, width 8
before junk removal:
result %502
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1353)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -105
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %362
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 1354)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -54
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 78
- creating inst add, width 8
before junk removal:
result %284
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 1355)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 78
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 89
- creating inst add, width 8
before junk removal:
result %318
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 1356)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 89
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -70
- creating inst add, width 8
before junk removal:
result %444
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1357)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -70
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 107
- creating inst add, width 8
before junk removal:
result %488
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1358)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 107
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 63
- creating inst add, width 8
before junk removal:
result %208
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1359)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 63
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 97
- creating inst add, width 8
before junk removal:
result %326
- creating inst and, width 8
before junk removal:
result %327
candidate:
result %327
didn't work for all inputs (#cex: 11, refinement: 1360)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 97
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %110
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 1361)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -100
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 115
- creating inst add, width 8
before junk removal:
result %456
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1362)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 115
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 63
- creating inst add, width 8
before junk removal:
result %208
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1363)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 63
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 71
- creating inst add, width 8
before junk removal:
result %262
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1364)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 71
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%506:i8 = add 179:i8, %1
result %506
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%507:i8 = and 0:i8, %506
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1365)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -77
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %268
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1366)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -23
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%508:i8 = add 235:i8, %1
result %508
- creating inst and, width 8
before junk removal:
%509:i8 = and 0:i8, %508
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 1367)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -21
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %256
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 1368)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -16
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -72
- creating inst add, width 8
before junk removal:
result %364
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 1369)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -72
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 72
- creating inst add, width 8
before junk removal:
result %118
- creating inst and, width 8
before junk removal:
result %119
candidate:
result %119
didn't work for all inputs (#cex: 11, refinement: 1370)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 72
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -109
- creating inst add, width 8
before junk removal:
result %430
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1371)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -109
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -34
- creating inst add, width 8
before junk removal:
result %480
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1372)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -34
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %378
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 1373)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -90
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 15
- creating inst add, width 8
before junk removal:
result %55
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 1374)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 15
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %446
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1375)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -39
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -48
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %230
- creating inst and, width 8
before junk removal:
result %231
candidate:
result %231
didn't work for all inputs (#cex: 11, refinement: 1376)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -48
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %486
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1377)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -99
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -18
- creating inst add, width 8
before junk removal:
result %296
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 1378)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -18
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -91
- creating inst add, width 8
before junk removal:
result %386
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 1379)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -91
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 60
- creating inst add, width 8
before junk removal:
result %240
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 1380)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 60
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -74
- creating inst add, width 8
before junk removal:
result %434
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1381)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -74
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %502
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1382)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -105
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 51
- creating inst add, width 8
before junk removal:
result %234
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1383)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 51
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -50
- creating inst add, width 8
before junk removal:
result %438
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1384)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -50
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %254
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 1385)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 30
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %314
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %315
candidate:
result %315
didn't work for all inputs (#cex: 11, refinement: 1386)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -107
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -116
- creating inst add, width 8
before junk removal:
result %270
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 1387)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -116
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 29
- creating inst add, width 8
before junk removal:
result %69
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 1388)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 29
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %372
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 1389)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -84
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %504
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1390)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -66
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %402
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1391)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -2
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -21
- creating inst add, width 8
before junk removal:
result %508
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 1392)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -21
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %232
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 1393)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -10
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 45
- creating inst add, width 8
before junk removal:
result %288
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 1394)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 45
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -103
- creating inst add, width 8
before junk removal:
result %334
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1395)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -103
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 99
- creating inst add, width 8
before junk removal:
result %352
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1396)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 99
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 109
- creating inst add, width 8
before junk removal:
result %170
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 1397)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 109
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %484
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1398)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -101
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %204
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 1399)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 67
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %426
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1400)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -75
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %276
- creating inst and, width 8
before junk removal:
result %277
candidate:
result %277
didn't work for all inputs (#cex: 11, refinement: 1401)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -60
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -63
- creating inst add, width 8
before junk removal:
result %306
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %307
candidate:
result %307
didn't work for all inputs (#cex: 11, refinement: 1402)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -63
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -80
- creating inst add, width 8
before junk removal:
result %224
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 1403)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -80
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %362
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 1404)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -54
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %272
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 1405)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -104
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -16
- creating inst add, width 8
before junk removal:
result %256
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 1406)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -16
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 93
- creating inst add, width 8
before junk removal:
result %390
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1407)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 93
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -87
- creating inst add, width 8
before junk removal:
result %398
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1408)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -87
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 30
- creating inst add, width 8
before junk removal:
result %254
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 1409)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 30
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %378
- creating inst and, width 8
before junk removal:
result %379
candidate:
result %379
didn't work for all inputs (#cex: 11, refinement: 1410)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -90
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %55
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %56
candidate:
result %56
didn't work for all inputs (#cex: 11, refinement: 1411)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 15
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -27
- creating inst add, width 8
before junk removal:
result %462
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1412)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -27
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 94
- creating inst add, width 8
before junk removal:
result %396
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1413)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 94
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 104
- creating inst add, width 8
before junk removal:
result %218
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 1414)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 104
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %270
- creating inst and, width 8
before junk removal:
result %271
candidate:
result %271
didn't work for all inputs (#cex: 11, refinement: 1415)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -116
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %290
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 1416)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -121
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %318
- creating inst and, width 8
before junk removal:
result %319
candidate:
result %319
didn't work for all inputs (#cex: 11, refinement: 1417)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 89
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 31
- creating inst add, width 8
before junk removal:
result %87
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 1418)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 31
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %214
- creating inst and, width 8
before junk removal:
result %215
candidate:
result %215
didn't work for all inputs (#cex: 11, refinement: 1419)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 44
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -93
- creating inst add, width 8
before junk removal:
result %198
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1420)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -93
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -38
- creating inst add, width 8
before junk removal:
result %450
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1421)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -38
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -31
- creating inst add, width 8
before junk removal:
result %424
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1422)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -31
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %300
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 1423)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 90
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -46
- creating inst add, width 8
before junk removal:
result %360
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1424)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -46
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -80
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %224
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 1425)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -80
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -22
- creating inst add, width 8
before junk removal:
result %414
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1426)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -22
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -18
- creating inst add, width 8
before junk removal:
result %296
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 1427)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -18
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %57
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1428)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -113
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 53
- creating inst add, width 8
before junk removal:
result %320
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 1429)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 53
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -66
- creating inst add, width 8
before junk removal:
result %504
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1430)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -66
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %218
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 1431)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 104
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %198
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1432)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -93
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 31
- creating inst add, width 8
before junk removal:
result %87
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 1433)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 31
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %482
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 1434)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 95
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 76
- creating inst add, width 8
before junk removal:
result %238
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 1435)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 76
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %450
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1436)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -38
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 83
- creating inst add, width 8
before junk removal:
result %400
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1437)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 83
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -80
- creating inst add, width 8
before junk removal:
result %224
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %225
candidate:
result %225
didn't work for all inputs (#cex: 11, refinement: 1438)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -80
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -113
- creating inst add, width 8
before junk removal:
result %57
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1439)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -113
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 122
- creating inst add, width 8
before junk removal:
result %472
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1440)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 122
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %358
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 1441)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -58
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -115
- creating inst add, width 8
before junk removal:
result %380
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1442)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -115
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %87
- creating inst and, width 8
before junk removal:
result %88
candidate:
result %88
didn't work for all inputs (#cex: 11, refinement: 1443)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 31
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %280
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 1444)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 108
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -79
- creating inst add, width 8
before junk removal:
result %394
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1445)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -79
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -47
- creating inst add, width 8
before junk removal:
result %392
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1446)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -47
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %478
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1447)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 87
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -70
- creating inst add, width 8
before junk removal:
result %444
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1448)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -70
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -82
- creating inst add, width 8
before junk removal:
result %494
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1449)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -82
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 79
- creating inst add, width 8
before junk removal:
result %412
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1450)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 79
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %296
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 1451)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -18
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -1
- creating inst add, width 8
before junk removal:
result %202
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 1452)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -1
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 108
- creating inst add, width 8
before junk removal:
result %280
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 1453)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 108
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %472
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1454)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 122
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -51
- creating inst add, width 8
before junk removal:
result %454
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1455)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -51
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %432
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1456)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -20
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 91
- creating inst add, width 8
before junk removal:
result %428
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1457)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 91
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 87
- creating inst add, width 8
before junk removal:
result %478
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1458)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 87
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %282
- creating inst and, width 8
before junk removal:
result %283
candidate:
result %283
didn't work for all inputs (#cex: 11, refinement: 1459)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 58
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %504
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1460)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -66
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 125
- creating inst add, width 8
before junk removal:
result %266
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 1461)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 125
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %188
- creating inst and, width 8
before junk removal:
result %189
candidate:
result %189
didn't work for all inputs (#cex: 11, refinement: 1462)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 70
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -58
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %358
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 1463)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -58
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -31
- creating inst add, width 8
before junk removal:
result %424
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1464)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -31
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %232
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 1465)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -10
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %386
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 1466)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -91
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %496
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1467)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -85
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %506
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1468)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -77
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %57
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1469)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -113
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %186
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 1470)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 102
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 125
- creating inst add, width 8
before junk removal:
result %266
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 1471)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 125
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %466
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1472)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -53
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -65
- creating inst add, width 8
before junk removal:
%510:i8 = add 191:i8, %1
result %510
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
%511:i8 = and 0:i8, %510
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 1473)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -65
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %444
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1474)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -70
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 117
- creating inst add, width 8
before junk removal:
result %384
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1475)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 117
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %440
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1476)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 118
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -23
- creating inst add, width 8
before junk removal:
result %268
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1477)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -23
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%512:i8 = add 159:i8, %1
result %512
- creating inst and, width 8
before junk removal:
%513:i8 = and 0:i8, %512
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 1478)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -97
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%514:i8 = add 187:i8, %1
result %514
- creating inst and, width 8
before junk removal:
%515:i8 = and 0:i8, %514
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 1479)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -69
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -61
- creating inst add, width 8
before junk removal:
result %338
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1480)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -61
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 99
- creating inst add, width 8
before junk removal:
result %352
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1481)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 99
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -23
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %268
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1482)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -23
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -95
- creating inst add, width 8
before junk removal:
result %196
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 1483)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -95
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %420
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1484)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -57
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %244
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 1485)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 81
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %336
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 1486)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 124
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %458
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1487)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 103
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %344
- creating inst and, width 8
before junk removal:
result %345
candidate:
result %345
didn't work for all inputs (#cex: 11, refinement: 1488)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -117
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %392
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1489)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -47
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %131
- creating inst and, width 8
before junk removal:
result %132
candidate:
result %132
didn't work for all inputs (#cex: 11, refinement: 1490)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -125
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %284
- creating inst and, width 8
before junk removal:
result %285
candidate:
result %285
didn't work for all inputs (#cex: 11, refinement: 1491)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 78
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -103
- creating inst add, width 8
before junk removal:
result %334
- creating inst and, width 8
before junk removal:
result %335
candidate:
result %335
didn't work for all inputs (#cex: 11, refinement: 1492)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -103
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %69
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 1493)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 29
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 53
- creating inst add, width 8
before junk removal:
result %320
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 1494)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 53
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %412
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1495)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 79
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 91
- creating inst add, width 8
before junk removal:
result %428
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1496)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 91
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%516:i8 = add 175:i8, %1
result %516
- creating inst and, width 8
before junk removal:
%517:i8 = and 0:i8, %516
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1497)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -81
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %65
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1498)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 113
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -69
- creating inst add, width 8
before junk removal:
result %514
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 1499)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -69
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -45
- creating inst add, width 8
before junk removal:
result %492
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1500)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -45
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 84
- creating inst add, width 8
before junk removal:
result %220
- creating inst and, width 8
before junk removal:
result %221
candidate:
result %221
didn't work for all inputs (#cex: 11, refinement: 1501)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 84
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -45
- creating inst add, width 8
before junk removal:
result %492
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1502)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -45
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 105
- creating inst add, width 8
before junk removal:
result %366
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1503)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 105
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 59
- creating inst add, width 8
before junk removal:
result %330
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1504)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 59
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -81
- creating inst add, width 8
before junk removal:
result %516
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1505)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -81
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 101
- creating inst add, width 8
before junk removal:
result %382
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 1506)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 101
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -44
- creating inst add, width 8
before junk removal:
result %374
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 1507)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -44
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %476
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1508)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -7
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 116
- creating inst add, width 8
before junk removal:
result %312
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 1509)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 116
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -1
- creating inst add, width 8
before junk removal:
result %202
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 1510)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -1
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 95
- creating inst add, width 8
before junk removal:
result %482
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 1511)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 95
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %238
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %239
candidate:
result %239
didn't work for all inputs (#cex: 11, refinement: 1512)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 76
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -29
- creating inst add, width 8
before junk removal:
result %452
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1513)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -29
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -101
- creating inst add, width 8
before junk removal:
result %484
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1514)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -101
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %210
- creating inst and, width 8
before junk removal:
result %211
candidate:
result %211
didn't work for all inputs (#cex: 11, refinement: 1515)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -88
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -78
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %308
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 1516)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -78
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -71
- creating inst add, width 8
before junk removal:
result %468
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1517)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -71
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -99
- creating inst add, width 8
before junk removal:
result %486
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1518)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -99
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -65
- creating inst add, width 8
before junk removal:
result %510
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 1519)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -65
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %312
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 1520)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 116
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %510
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 1521)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -65
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -97
- creating inst add, width 8
before junk removal:
result %512
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 1522)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -97
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%518:i8 = add 207:i8, %1
result %518
- creating inst and, width 8
before junk removal:
%519:i8 = and 0:i8, %518
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1523)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -49
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -109
- creating inst add, width 8
before junk removal:
result %430
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1524)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -109
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%520:i8 = add 243:i8, %1
result %520
- creating inst and, width 8
before junk removal:
%521:i8 = and 0:i8, %520
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1525)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -13
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -1
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %202
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %203
candidate:
result %203
didn't work for all inputs (#cex: 11, refinement: 1526)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -1
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -105
- creating inst add, width 8
before junk removal:
result %502
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1527)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -105
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -7
- creating inst add, width 8
before junk removal:
result %476
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1528)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -7
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -43
- creating inst add, width 8
before junk removal:
result %498
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1529)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -43
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -53
- creating inst add, width 8
before junk removal:
result %466
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1530)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -53
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -114
- creating inst add, width 8
before junk removal:
result %342
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 1531)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -114
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %366
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1532)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 105
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%522:i8 = add 183:i8, %1
result %522
- creating inst and, width 8
before junk removal:
%523:i8 = and 0:i8, %522
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1533)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -73
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%524:i8 = add 189:i8, %1
result %524
- creating inst and, width 8
before junk removal:
%525:i8 = and 0:i8, %524
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 1534)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -67
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -81
- creating inst add, width 8
before junk removal:
result %516
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1535)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -81
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %322
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 1536)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 54
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %524
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 1537)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -67
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %518
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1538)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -49
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %462
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1539)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -27
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %496
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1540)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -85
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %320
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 1541)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 53
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -84
- creating inst add, width 8
before junk removal:
result %372
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 1542)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -84
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %498
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1543)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -43
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %206
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 1544)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -17
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%526:i8 = add 215:i8, %1
result %526
- creating inst and, width 8
before junk removal:
%527:i8 = and 0:i8, %526
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1545)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -41
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %354
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 1546)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -123
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %324
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 1547)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 92
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 111
- creating inst add, width 8
before junk removal:
result %448
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1548)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 111
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 88
- creating inst add, width 8
before junk removal:
result %286
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 1549)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 88
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 104
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %218
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %219
candidate:
result %219
didn't work for all inputs (#cex: 11, refinement: 1550)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 104
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 46
- creating inst add, width 8
before junk removal:
result %340
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 1551)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 46
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -24
- creating inst add, width 8
before junk removal:
result %274
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 1552)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -24
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -114
- creating inst add, width 8
before junk removal:
result %342
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 1553)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -114
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 114
- creating inst add, width 8
before junk removal:
result %332
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 1554)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 114
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %522
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1555)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -73
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -83
- creating inst add, width 8
before junk removal:
result %460
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1556)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -83
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -78
- creating inst add, width 8
before junk removal:
result %308
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 1557)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -78
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -123
- creating inst add, width 8
before junk removal:
result %354
- creating inst and, width 8
before junk removal:
result %355
candidate:
result %355
didn't work for all inputs (#cex: 11, refinement: 1558)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -123
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%528:i8 = add 221:i8, %1
result %528
- creating inst and, width 8
before junk removal:
%529:i8 = and 0:i8, %528
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 1559)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -35
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %464
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1560)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -89
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 71
- creating inst add, width 8
before junk removal:
result %262
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1561)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 71
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -51
- creating inst add, width 8
before junk removal:
result %454
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1562)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -51
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -76
- creating inst add, width 8
before junk removal:
result %388
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 1563)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -76
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -71
- creating inst add, width 8
before junk removal:
result %468
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1564)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -71
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 123
- creating inst add, width 8
before junk removal:
result %500
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 1565)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 123
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %348
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 1566)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -30
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %342
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 1567)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -114
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -25
- creating inst add, width 8
before junk removal:
result %490
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1568)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -25
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -41
- creating inst add, width 8
before junk removal:
result %526
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1569)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -41
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -28
- creating inst add, width 8
before junk removal:
result %350
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 1570)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -28
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %506
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1571)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -77
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -25
- creating inst add, width 8
before junk removal:
result %490
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1572)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -25
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %514
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 1573)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -69
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %490
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1574)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -25
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 81
- creating inst add, width 8
before junk removal:
result %244
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 1575)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 81
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %222
- creating inst and, width 8
before junk removal:
result %223
candidate:
result %223
didn't work for all inputs (#cex: 11, refinement: 1576)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 73
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %332
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 1577)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 114
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -106
- creating inst add, width 8
before junk removal:
result %370
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 1578)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -106
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%530:i8 = add 219:i8, %1
result %530
- creating inst and, width 8
before junk removal:
%531:i8 = and 0:i8, %530
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 1579)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -37
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %484
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1580)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -101
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%532:i8 = add 223:i8, %1
result %532
- creating inst and, width 8
before junk removal:
%533:i8 = and 0:i8, %532
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 1581)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -33
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -77
- creating inst add, width 8
before junk removal:
result %506
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1582)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -77
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -43
- creating inst add, width 8
before junk removal:
result %498
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1583)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -43
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 81
- creating inst add, width 8
before junk removal:
result %244
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %245
candidate:
result %245
didn't work for all inputs (#cex: 11, refinement: 1584)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 81
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -99
- creating inst add, width 8
before junk removal:
result %486
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1585)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -99
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 85
- creating inst add, width 8
before junk removal:
result %376
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 1586)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 85
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 113
- creating inst add, width 8
before junk removal:
result %65
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1587)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 113
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -87
- creating inst add, width 8
before junk removal:
result %398
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1588)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -87
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -85
- creating inst add, width 8
before junk removal:
result %496
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1589)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -85
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -53
- creating inst add, width 8
before junk removal:
result %466
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1590)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -53
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %364
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 1591)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -72
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -16
- creating inst add, width 8
before junk removal:
result %256
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 1592)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -16
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 41
- creating inst add, width 8
before junk removal:
result %145
- creating inst and, width 8
before junk removal:
result %146
candidate:
result %146
didn't work for all inputs (#cex: 11, refinement: 1593)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 41
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 77
- creating inst add, width 8
before junk removal:
result %167
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 1594)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 77
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %526
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1595)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -41
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -83
- creating inst add, width 8
before junk removal:
result %460
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1596)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -83
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -121
- creating inst add, width 8
before junk removal:
result %290
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 1597)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -121
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 90
- creating inst add, width 8
before junk removal:
result %300
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 1598)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 90
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -79
- creating inst add, width 8
before junk removal:
result %394
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1599)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -79
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -35
- creating inst add, width 8
before junk removal:
result %528
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 1600)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -35
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -52
- creating inst add, width 8
before junk removal:
result %346
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 1601)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -52
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -35
- creating inst add, width 8
before junk removal:
result %528
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 1602)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -35
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 124
- creating inst add, width 8
before junk removal:
result %336
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 1603)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 124
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %262
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1604)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 71
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -71
- creating inst add, width 8
before junk removal:
result %468
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1605)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -71
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -75
- creating inst add, width 8
before junk removal:
result %426
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1606)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -75
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -27
- creating inst add, width 8
before junk removal:
result %462
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1607)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -27
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %528
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 1608)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -35
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -93
- creating inst add, width 8
before junk removal:
result %198
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1609)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -93
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -91
- creating inst add, width 8
before junk removal:
result %386
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 1610)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -91
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -97
- creating inst add, width 8
before junk removal:
result %512
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 1611)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -97
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -2
- creating inst add, width 8
before junk removal:
result %402
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1612)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -2
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -73
- creating inst add, width 8
before junk removal:
result %522
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1613)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -73
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_1 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
%534:i8 = add 251:i8, %1
result %534
- creating inst and, width 8
before junk removal:
%535:i8 = and 0:i8, %534
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 1614)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -5
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -19
- creating inst add, width 8
before junk removal:
result %71
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 1615)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -19
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %163
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 1616)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 57
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %304
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 1617)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 47
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -49
- creating inst add, width 8
before junk removal:
result %518
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1618)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -49
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 57
- creating inst add, width 8
before junk removal:
result %163
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 1619)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 57
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %288
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 1620)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 45
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -69
- creating inst add, width 8
before junk removal:
result %514
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 1621)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -69
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 67
- creating inst add, width 8
before junk removal:
result %204
- creating inst and, width 8
before junk removal:
result %205
candidate:
result %205
didn't work for all inputs (#cex: 11, refinement: 1622)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 67
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -67
- creating inst add, width 8
before junk removal:
result %524
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 1623)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -67
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -101
- creating inst add, width 8
before junk removal:
result %484
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1624)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -101
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %328
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 1625)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 62
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %236
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 1626)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 43
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %508
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 1627)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -21
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -37
- creating inst add, width 8
before junk removal:
result %530
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 1628)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -37
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 116
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %312
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %313
candidate:
result %313
didn't work for all inputs (#cex: 11, refinement: 1629)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 116
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -115
- creating inst add, width 8
before junk removal:
result %380
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1630)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -115
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -13
- creating inst add, width 8
before junk removal:
result %520
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1631)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -13
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -77
- creating inst add, width 8
before junk removal:
result %506
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1632)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -77
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %161
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 1633)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -3
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 91
- creating inst add, width 8
before junk removal:
result %428
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1634)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 91
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -67
- creating inst add, width 8
before junk removal:
result %524
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 1635)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -67
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -104
- creating inst add, width 8
before junk removal:
result %272
- creating inst and, width 8
before junk removal:
result %273
candidate:
result %273
didn't work for all inputs (#cex: 11, refinement: 1636)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -104
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %532
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 1637)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -33
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 105
- creating inst add, width 8
before junk removal:
result %366
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1638)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 105
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %406
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 1639)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 55
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %248
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 1640)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 106
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -5
- creating inst add, width 8
before junk removal:
result %534
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 1641)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -5
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %292
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 1642)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 126
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -15
- creating inst add, width 8
before junk removal:
result %474
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1643)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -15
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -49
- creating inst add, width 8
before junk removal:
result %518
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1644)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -49
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 92
- creating inst add, width 8
before junk removal:
result %324
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 1645)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 92
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %422
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1646)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 110
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -3
- creating inst add, width 8
before junk removal:
result %161
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 1647)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -3
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %108
- creating inst and, width 8
before junk removal:
result %109
candidate:
result %109
didn't work for all inputs (#cex: 11, refinement: 1648)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 27
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %512
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 1649)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -97
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %330
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1650)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 59
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -23
- creating inst add, width 8
before junk removal:
result %268
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %269
candidate:
result %269
didn't work for all inputs (#cex: 11, refinement: 1651)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -23
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -37
- creating inst add, width 8
before junk removal:
result %530
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 1652)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -37
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %382
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 1653)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 101
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %416
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1654)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -59
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -73
- creating inst add, width 8
before junk removal:
result %522
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1655)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -73
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %520
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1656)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -13
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -33
- creating inst add, width 8
before junk removal:
result %532
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 1657)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -33
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -19
- creating inst add, width 8
before junk removal:
result %71
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 1658)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -19
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %302
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 1659)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 121
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -2
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %402
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1660)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -2
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -33
- creating inst add, width 8
before junk removal:
result %532
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 1661)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -33
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %316
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 1662)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -55
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -9
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %91
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %92
candidate:
result %92
didn't work for all inputs (#cex: 11, refinement: 1663)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -9
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %530
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 1664)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -37
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -7
- creating inst add, width 8
before junk removal:
result %476
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1665)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -7
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 29
- creating inst add, width 8
before junk removal:
result %69
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 1666)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 29
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 126
- creating inst add, width 8
before junk removal:
result %292
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 1667)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 126
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %534
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 1668)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -5
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %516
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1669)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -81
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -16
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %256
- creating inst and, width 8
before junk removal:
result %257
candidate:
result %257
didn't work for all inputs (#cex: 11, refinement: 1670)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -16
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 2_2 (and,i8) 
2	0_3 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %510
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 1671)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -65
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 95
- creating inst add, width 8
before junk removal:
result %482
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 1672)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 95
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 2_2 (and,i8) 
1	0_3 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %206
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 1673)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -17
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -41
- creating inst add, width 8
before junk removal:
result %526
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1674)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -41
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 88
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %286
- creating inst and, width 8
before junk removal:
result %287
candidate:
result %287
didn't work for all inputs (#cex: 11, refinement: 1675)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 88
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %438
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1676)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -50
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 63
- creating inst add, width 8
before junk removal:
result %208
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1677)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 63
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -3
- creating inst add, width 8
before junk removal:
result %161
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 1678)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -3
2_2 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %186
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %187
candidate:
result %187
didn't work for all inputs (#cex: 11, refinement: 1679)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 102
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -28
- creating inst add, width 8
before junk removal:
result %350
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 1680)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -28
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 2_1 (and,i8) 
2	0_3 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -17
- creating inst add, width 8
before junk removal:
result %206
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 1681)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -17
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -30
- creating inst add, width 8
before junk removal:
result %348
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 1682)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -30
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -14
- creating inst add, width 8
before junk removal:
result %212
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1683)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -14
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -13
- creating inst add, width 8
before junk removal:
result %520
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1684)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -13
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 47
- creating inst add, width 8
before junk removal:
result %304
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 1685)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 47
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 62
- creating inst add, width 8
before junk removal:
result %328
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 1686)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 62
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %370
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 1687)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -106
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %69
- creating inst and, width 8
before junk removal:
result %70
candidate:
result %70
didn't work for all inputs (#cex: 11, refinement: 1688)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 29
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %298
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 1689)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -86
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %258
- creating inst and, width 8
before junk removal:
result %259
candidate:
result %259
didn't work for all inputs (#cex: 11, refinement: 1690)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 49
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %416
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1691)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -59
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %167
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 1692)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 77
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -21
- creating inst add, width 8
before junk removal:
result %508
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 1693)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -21
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value -5
- creating inst add, width 8
before junk removal:
result %534
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 1694)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == -5
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -121
- creating inst add, width 8
before junk removal:
result %290
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 1695)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -121
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %502
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1696)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -105
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -40
- creating inst add, width 8
before junk removal:
result %356
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 1697)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -40
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %342
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %343
candidate:
result %343
didn't work for all inputs (#cex: 11, refinement: 1698)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -114
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 114
- creating inst add, width 8
before junk removal:
result %332
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 1699)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 114
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %350
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 1700)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -28
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %380
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1701)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -115
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -58
- creating inst add, width 8
before junk removal:
result %358
- creating inst and, width 8
before junk removal:
result %359
candidate:
result %359
didn't work for all inputs (#cex: 11, refinement: 1702)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -58
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 79
- creating inst add, width 8
before junk removal:
result %412
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1703)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 79
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %278
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1704)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -26
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -72
- creating inst add, width 8
before junk removal:
result %364
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 1705)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -72
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %338
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1706)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -61
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -12
- creating inst add, width 8
before junk removal:
result %404
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 1707)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -12
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %163
- creating inst and, width 8
before junk removal:
result %164
candidate:
result %164
didn't work for all inputs (#cex: 11, refinement: 1708)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 57
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -105
- creating inst add, width 8
before junk removal:
result %502
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1709)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -105
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %346
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 1710)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -52
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -46
- creating inst add, width 8
before junk removal:
result %360
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1711)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -46
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 46
- creating inst add, width 8
before junk removal:
result %340
- creating inst and, width 8
before junk removal:
result %341
candidate:
result %341
didn't work for all inputs (#cex: 11, refinement: 1712)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 46
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -99
- creating inst add, width 8
before junk removal:
result %486
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1713)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -99
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 71
- creating inst add, width 8
before junk removal:
result %262
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1714)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 71
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -44
- creating inst add, width 8
before junk removal:
result %374
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 1715)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -44
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -44
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %374
- creating inst and, width 8
before junk removal:
result %375
candidate:
result %375
didn't work for all inputs (#cex: 11, refinement: 1716)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -44
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %356
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 1717)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -40
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 30
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %254
- creating inst and, width 8
before junk removal:
result %255
candidate:
result %255
didn't work for all inputs (#cex: 11, refinement: 1718)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 30
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 60
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %240
- creating inst and, width 8
before junk removal:
result %241
candidate:
result %241
didn't work for all inputs (#cex: 11, refinement: 1719)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 60
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %294
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 1720)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 61
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 54
- creating inst add, width 8
before junk removal:
result %322
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 1721)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 54
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 45
- creating inst add, width 8
before junk removal:
result %288
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 1722)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 45
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %57
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1723)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -113
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 62
- creating inst add, width 8
before junk removal:
result %328
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 1724)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 62
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %494
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1725)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -82
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %448
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1726)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 111
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %234
- creating inst and, width 8
before junk removal:
result %235
candidate:
result %235
didn't work for all inputs (#cex: 11, refinement: 1727)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 51
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -26
- creating inst add, width 8
before junk removal:
result %278
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1728)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -26
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 120
- creating inst add, width 8
before junk removal:
result %141
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 1729)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 120
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -20
- creating inst add, width 8
before junk removal:
result %432
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1730)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -20
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %110
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 1731)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -100
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -102
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %310
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 1732)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -102
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %302
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 1733)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 121
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 118
- creating inst add, width 8
before junk removal:
result %440
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1734)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 118
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %442
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1735)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -8
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -76
- creating inst add, width 8
before junk removal:
result %388
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 1736)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -76
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -84
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %372
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 1737)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -84
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 92
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %324
- creating inst and, width 8
before junk removal:
result %325
candidate:
result %325
didn't work for all inputs (#cex: 11, refinement: 1738)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 92
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %396
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1739)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 94
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %274
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 1740)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -24
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -61
- creating inst add, width 8
before junk removal:
result %338
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1741)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -61
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 55
- creating inst add, width 8
before junk removal:
result %406
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 1742)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 55
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %352
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1743)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 99
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -52
- creating inst add, width 8
before junk removal:
result %346
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 1744)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -52
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 114
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %332
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %333
candidate:
result %333
didn't work for all inputs (#cex: 11, refinement: 1745)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 114
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -77
- creating inst add, width 8
before junk removal:
result %506
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 1746)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -77
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -83
- creating inst add, width 8
before junk removal:
result %460
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1747)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -83
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -59
- creating inst add, width 8
before junk removal:
result %416
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1748)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -59
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %196
- creating inst and, width 8
before junk removal:
result %197
candidate:
result %197
didn't work for all inputs (#cex: 11, refinement: 1749)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -95
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 100
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %194
- creating inst and, width 8
before junk removal:
result %195
candidate:
result %195
didn't work for all inputs (#cex: 11, refinement: 1750)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 100
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %248
- creating inst and, width 8
before junk removal:
result %249
candidate:
result %249
didn't work for all inputs (#cex: 11, refinement: 1751)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 106
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -115
- creating inst add, width 8
before junk removal:
result %380
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1752)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -115
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -106
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %370
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 1753)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -106
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -24
- creating inst add, width 8
before junk removal:
result %274
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 1754)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -24
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %388
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 1755)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -76
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -12
- creating inst add, width 8
before junk removal:
result %404
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 1756)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -12
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 113
- creating inst add, width 8
before junk removal:
result %65
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1757)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 113
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 108
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %280
- creating inst and, width 8
before junk removal:
result %281
candidate:
result %281
didn't work for all inputs (#cex: 11, refinement: 1758)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 108
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %262
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %263
candidate:
result %263
didn't work for all inputs (#cex: 11, refinement: 1759)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 71
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %474
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1760)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -15
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %420
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1761)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -57
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -40
- creating inst add, width 8
before junk removal:
result %356
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 1762)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -40
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 120
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %141
- creating inst and, width 8
before junk removal:
result %142
candidate:
result %142
didn't work for all inputs (#cex: 11, refinement: 1763)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 120
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -121
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %290
- creating inst and, width 8
before junk removal:
result %291
candidate:
result %291
didn't work for all inputs (#cex: 11, refinement: 1764)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -121
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -8
- creating inst add, width 8
before junk removal:
result %442
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1765)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -8
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %366
- creating inst and, width 8
before junk removal:
result %367
candidate:
result %367
didn't work for all inputs (#cex: 11, refinement: 1766)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 105
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %434
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1767)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -74
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -89
- creating inst add, width 8
before junk removal:
result %464
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1768)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -89
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 83
- creating inst add, width 8
before junk removal:
result %400
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1769)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 83
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %466
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1770)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -53
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -36
- creating inst add, width 8
before junk removal:
result %410
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 1771)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -36
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -50
- creating inst add, width 8
before junk removal:
result %438
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1772)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -50
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -24
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %274
- creating inst and, width 8
before junk removal:
result %275
candidate:
result %275
didn't work for all inputs (#cex: 11, refinement: 1773)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -24
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 124
- creating inst add, width 8
before junk removal:
result %336
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 1774)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 124
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -102
- creating inst add, width 8
before junk removal:
result %310
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 1775)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -102
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 61
- creating inst add, width 8
before junk removal:
result %294
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 1776)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 61
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -47
- creating inst add, width 8
before junk removal:
result %392
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1777)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -47
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -42
- creating inst add, width 8
before junk removal:
result %436
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1778)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -42
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %376
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 1779)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 85
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -100
- creating inst add, width 8
before junk removal:
result %110
- creating inst and, width 8
before junk removal:
result %111
candidate:
result %111
didn't work for all inputs (#cex: 11, refinement: 1780)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -100
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 93
- creating inst add, width 8
before junk removal:
result %390
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1781)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 93
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %167
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 1782)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 77
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -54
- creating inst add, width 8
before junk removal:
result %362
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %363
candidate:
result %363
didn't work for all inputs (#cex: 11, refinement: 1783)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -54
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -106
- creating inst add, width 8
before junk removal:
result %370
- creating inst and, width 8
before junk removal:
result %371
candidate:
result %371
didn't work for all inputs (#cex: 11, refinement: 1784)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -106
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -55
- creating inst add, width 8
before junk removal:
result %316
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 1785)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -55
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -47
- creating inst add, width 8
before junk removal:
result %392
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1786)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -47
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -61
- creating inst add, width 8
before junk removal:
result %338
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1787)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -61
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -113
- creating inst add, width 8
before junk removal:
result %57
- creating inst and, width 8
before junk removal:
result %58
candidate:
result %58
didn't work for all inputs (#cex: 11, refinement: 1788)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -113
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -68
- creating inst add, width 8
before junk removal:
result %124
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1789)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -68
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -75
- creating inst add, width 8
before junk removal:
result %426
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1790)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -75
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %408
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1791)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -98
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -85
- creating inst add, width 8
before junk removal:
result %496
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1792)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -85
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -59
- creating inst add, width 8
before junk removal:
result %416
- creating inst and, width 8
before junk removal:
result %417
candidate:
result %417
didn't work for all inputs (#cex: 11, refinement: 1793)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -59
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %410
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 1794)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -36
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -87
- creating inst add, width 8
before junk removal:
result %398
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1795)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -87
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 110
- creating inst add, width 8
before junk removal:
result %422
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1796)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 110
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 77
- creating inst add, width 8
before junk removal:
result %167
- creating inst and, width 8
before junk removal:
result %168
candidate:
result %168
didn't work for all inputs (#cex: 11, refinement: 1797)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 77
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -78
- creating inst add, width 8
before junk removal:
result %308
- creating inst and, width 8
before junk removal:
result %309
candidate:
result %309
didn't work for all inputs (#cex: 11, refinement: 1798)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -78
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %386
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 1799)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -91
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -76
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %388
- creating inst and, width 8
before junk removal:
result %389
candidate:
result %389
didn't work for all inputs (#cex: 11, refinement: 1800)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -76
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -86
- creating inst add, width 8
before junk removal:
result %298
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 1801)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -86
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %178
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 1802)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 86
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -4
- creating inst add, width 8
before junk removal:
result %368
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1803)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -4
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -57
- creating inst add, width 8
before junk removal:
result %420
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1804)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -57
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %124
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1805)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -68
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %386
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %387
candidate:
result %387
didn't work for all inputs (#cex: 11, refinement: 1806)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -91
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 103
- creating inst add, width 8
before junk removal:
result %458
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1807)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 103
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -27
- creating inst add, width 8
before junk removal:
result %462
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1808)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -27
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -84
- creating inst add, width 8
before junk removal:
result %372
- creating inst and, width 8
before junk removal:
result %373
candidate:
result %373
didn't work for all inputs (#cex: 11, refinement: 1809)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -84
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %430
- creating inst and, width 8
before junk removal:
result %431
candidate:
result %431
didn't work for all inputs (#cex: 11, refinement: 1810)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -109
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -68
- creating inst add, width 8
before junk removal:
result %124
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1811)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -68
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %360
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1812)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -46
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -3
- creating inst add, width 8
before junk removal:
result %161
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 1813)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -3
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 118
- creating inst add, width 8
before junk removal:
result %440
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 1814)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 118
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %170
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 1815)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 109
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %320
- creating inst and, width 8
before junk removal:
result %321
candidate:
result %321
didn't work for all inputs (#cex: 11, refinement: 1816)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 53
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %198
- creating inst and, width 8
before junk removal:
result %199
candidate:
result %199
didn't work for all inputs (#cex: 11, refinement: 1817)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -93
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 63
- creating inst add, width 8
before junk removal:
result %208
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 1818)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 63
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -15
- creating inst add, width 8
before junk removal:
result %474
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1819)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -15
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %380
- creating inst and, width 8
before junk removal:
result %381
candidate:
result %381
didn't work for all inputs (#cex: 11, refinement: 1820)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -115
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %486
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1821)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -99
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -50
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %438
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1822)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -50
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %424
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1823)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -31
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -8
- creating inst add, width 8
before junk removal:
result %442
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1824)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -8
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -102
- creating inst add, width 8
before junk removal:
result %310
- creating inst and, width 8
before junk removal:
result %311
candidate:
result %311
didn't work for all inputs (#cex: 11, refinement: 1825)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -102
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %400
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1826)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 83
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -46
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %360
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %361
candidate:
result %361
didn't work for all inputs (#cex: 11, refinement: 1827)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -46
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -38
- creating inst add, width 8
before junk removal:
result %450
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1828)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -38
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -72
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %364
- creating inst and, width 8
before junk removal:
result %365
candidate:
result %365
didn't work for all inputs (#cex: 11, refinement: 1829)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -72
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 122
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %472
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 1830)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 122
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -2
- creating inst add, width 8
before junk removal:
result %402
- creating inst and, width 8
before junk removal:
result %403
candidate:
result %403
didn't work for all inputs (#cex: 11, refinement: 1831)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -2
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -22
- creating inst add, width 8
before junk removal:
result %414
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1832)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -22
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %398
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1833)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -87
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %250
- creating inst and, width 8
before junk removal:
result %251
candidate:
result %251
didn't work for all inputs (#cex: 11, refinement: 1834)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 75
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -67
- creating inst add, width 8
before junk removal:
result %524
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 1835)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -67
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 87
- creating inst add, width 8
before junk removal:
result %478
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1836)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 87
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -98
- creating inst add, width 8
before junk removal:
result %408
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1837)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -98
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %384
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1838)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 117
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -74
- creating inst add, width 8
before junk removal:
result %434
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1839)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -74
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %456
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1840)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 115
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %436
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1841)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -42
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -20
- creating inst add, width 8
before junk removal:
result %432
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1842)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -20
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 103
- creating inst add, width 8
before junk removal:
result %458
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1843)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 103
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -40
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %356
- creating inst and, width 8
before junk removal:
result %357
candidate:
result %357
didn't work for all inputs (#cex: 11, refinement: 1844)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -40
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -51
- creating inst add, width 8
before junk removal:
result %454
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1845)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -51
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 54
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %322
- creating inst and, width 8
before junk removal:
result %323
candidate:
result %323
didn't work for all inputs (#cex: 11, refinement: 1846)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 54
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %426
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1847)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -75
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %464
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1848)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -89
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -105
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %502
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 1849)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -105
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 115
- creating inst add, width 8
before junk removal:
result %456
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1850)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 115
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -79
- creating inst add, width 8
before junk removal:
result %394
- creating inst and, width 8
before junk removal:
result %395
candidate:
result %395
didn't work for all inputs (#cex: 11, refinement: 1851)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -79
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 107
- creating inst add, width 8
before junk removal:
result %488
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1852)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 107
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 113
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %65
- creating inst and, width 8
before junk removal:
result %66
candidate:
result %66
didn't work for all inputs (#cex: 11, refinement: 1853)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 113
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %390
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1854)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 93
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -75
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %426
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 1855)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -75
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -57
- creating inst add, width 8
before junk removal:
result %420
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1856)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -57
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %298
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 1857)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -86
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 93
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %390
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1858)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 93
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -31
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %424
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %425
candidate:
result %425
didn't work for all inputs (#cex: 11, refinement: 1859)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -31
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %316
- creating inst and, width 8
before junk removal:
result %317
candidate:
result %317
didn't work for all inputs (#cex: 11, refinement: 1860)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -55
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %376
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 1861)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 85
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -74
- creating inst add, width 8
before junk removal:
result %434
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 1862)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -74
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 124
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %336
- creating inst and, width 8
before junk removal:
result %337
candidate:
result %337
didn't work for all inputs (#cex: 11, refinement: 1863)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 124
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 55
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %406
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 1864)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 55
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -52
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %346
- creating inst and, width 8
before junk removal:
result %347
candidate:
result %347
didn't work for all inputs (#cex: 11, refinement: 1865)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -52
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %404
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 1866)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -12
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %452
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1867)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -29
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -39
- creating inst add, width 8
before junk removal:
result %446
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1868)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -39
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %484
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1869)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -101
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 59
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %330
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1870)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 59
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -98
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %408
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1871)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -98
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -36
- creating inst add, width 8
before junk removal:
result %410
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 1872)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -36
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %458
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 1873)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 103
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -101
- creating inst add, width 8
before junk removal:
result %484
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1874)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -101
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -28
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %350
- creating inst and, width 8
before junk removal:
result %351
candidate:
result %351
didn't work for all inputs (#cex: 11, refinement: 1875)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -28
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %504
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1876)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -66
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %398
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %399
candidate:
result %399
didn't work for all inputs (#cex: 11, refinement: 1877)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -87
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %212
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1878)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -14
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 85
- creating inst add, width 8
before junk removal:
result %376
- creating inst and, width 8
before junk removal:
result %377
candidate:
result %377
didn't work for all inputs (#cex: 11, refinement: 1879)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 85
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %338
- creating inst and, width 8
before junk removal:
result %339
candidate:
result %339
didn't work for all inputs (#cex: 11, refinement: 1880)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -61
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %446
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1881)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -39
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -73
- creating inst add, width 8
before junk removal:
result %522
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1882)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -73
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 55
- creating inst add, width 8
before junk removal:
result %406
- creating inst and, width 8
before junk removal:
result %407
candidate:
result %407
didn't work for all inputs (#cex: 11, refinement: 1883)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 55
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -50
- creating inst add, width 8
before junk removal:
result %438
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %439
candidate:
result %439
didn't work for all inputs (#cex: 11, refinement: 1884)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -50
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %392
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %393
candidate:
result %393
didn't work for all inputs (#cex: 11, refinement: 1885)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -47
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -82
- creating inst add, width 8
before junk removal:
result %494
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1886)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -82
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -8
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %442
- creating inst and, width 8
before junk removal:
result %443
candidate:
result %443
didn't work for all inputs (#cex: 11, refinement: 1887)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -8
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %522
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 1888)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -73
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %414
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1889)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -22
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -14
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %212
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1890)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -14
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 117
- creating inst add, width 8
before junk removal:
result %384
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1891)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 117
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -18
- creating inst add, width 8
before junk removal:
result %296
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 1892)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -18
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -30
- creating inst add, width 8
before junk removal:
result %348
- creating inst and, width 8
before junk removal:
result %349
candidate:
result %349
didn't work for all inputs (#cex: 11, refinement: 1893)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -30
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %492
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1894)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -45
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 110
- creating inst add, width 8
before junk removal:
result %422
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 1895)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 110
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -26
- creating inst add, width 8
before junk removal:
result %278
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1896)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -26
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -53
- creating inst add, width 8
before junk removal:
result %466
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1897)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -53
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -29
- creating inst add, width 8
before junk removal:
result %452
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1898)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -29
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -81
- creating inst add, width 8
before junk removal:
result %516
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1899)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -81
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %232
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 1900)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -10
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 111
- creating inst add, width 8
before junk removal:
result %448
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 1901)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 111
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %480
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1902)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -34
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %496
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 1903)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -85
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 117
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %384
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 1904)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 117
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -57
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %420
- creating inst and, width 8
before junk removal:
result %421
candidate:
result %421
didn't work for all inputs (#cex: 11, refinement: 1905)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -57
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 86
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %178
- creating inst and, width 8
before junk removal:
result %179
candidate:
result %179
didn't work for all inputs (#cex: 11, refinement: 1906)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 86
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 109
- creating inst add, width 8
before junk removal:
result %170
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 1907)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 109
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -34
- creating inst add, width 8
before junk removal:
result %480
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1908)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -34
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -4
- creating inst add, width 8
before junk removal:
result %368
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1909)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -4
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %460
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 1910)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -83
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %516
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 1911)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -81
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -53
- creating inst add, width 8
before junk removal:
result %466
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 1912)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -53
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 93
- creating inst add, width 8
before junk removal:
result %390
- creating inst and, width 8
before junk removal:
result %391
candidate:
result %391
didn't work for all inputs (#cex: 11, refinement: 1913)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 93
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 121
- creating inst add, width 8
before junk removal:
result %302
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %303
candidate:
result %303
didn't work for all inputs (#cex: 11, refinement: 1914)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 121
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -45
- creating inst add, width 8
before junk removal:
result %492
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1915)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -45
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -13
- creating inst add, width 8
before junk removal:
result %520
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1916)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -13
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -39
- creating inst add, width 8
before junk removal:
result %446
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1917)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -39
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -25
- creating inst add, width 8
before junk removal:
result %490
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1918)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -25
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 62
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %328
- creating inst and, width 8
before junk removal:
result %329
candidate:
result %329
didn't work for all inputs (#cex: 11, refinement: 1919)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 62
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 101
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %382
- creating inst and, width 8
before junk removal:
result %383
candidate:
result %383
didn't work for all inputs (#cex: 11, refinement: 1920)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 101
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -10
- creating inst add, width 8
before junk removal:
result %232
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 1921)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -10
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -29
- creating inst add, width 8
before junk removal:
result %452
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 1922)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -29
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -42
- creating inst add, width 8
before junk removal:
result %436
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 1923)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -42
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %462
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1924)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -27
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %498
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1925)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -43
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -51
- creating inst add, width 8
before junk removal:
result %454
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1926)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -51
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -49
- creating inst add, width 8
before junk removal:
result %518
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1927)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -49
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -66
- creating inst add, width 8
before junk removal:
result %504
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 1928)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -66
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %520
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 1929)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -13
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 79
- creating inst add, width 8
before junk removal:
result %412
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 1930)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 79
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %428
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1931)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 91
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -26
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %278
- creating inst and, width 8
before junk removal:
result %279
candidate:
result %279
didn't work for all inputs (#cex: 11, refinement: 1932)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -26
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -43
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %498
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1933)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -43
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 94
- creating inst add, width 8
before junk removal:
result %396
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 1934)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 94
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -22
- creating inst add, width 8
before junk removal:
result %414
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1935)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -22
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -43
- creating inst add, width 8
before junk removal:
result %498
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1936)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -43
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -14
- creating inst add, width 8
before junk removal:
result %212
- creating inst and, width 8
before junk removal:
result %213
candidate:
result %213
didn't work for all inputs (#cex: 11, refinement: 1937)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -14
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -98
- creating inst add, width 8
before junk removal:
result %408
- creating inst and, width 8
before junk removal:
result %409
candidate:
result %409
didn't work for all inputs (#cex: 11, refinement: 1938)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -98
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %454
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 1939)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -51
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %478
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1940)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 87
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %296
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 1941)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -18
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -68
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %124
- creating inst and, width 8
before junk removal:
result %125
candidate:
result %125
didn't work for all inputs (#cex: 11, refinement: 1942)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -68
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %368
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 1943)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -4
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -6
- creating inst add, width 8
before junk removal:
result %470
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1944)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -6
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -20
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %432
- creating inst and, width 8
before junk removal:
result %433
candidate:
result %433
didn't work for all inputs (#cex: 11, refinement: 1945)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -20
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %490
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1946)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -25
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -43
- creating inst add, width 8
before junk removal:
result %498
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %499
candidate:
result %499
didn't work for all inputs (#cex: 11, refinement: 1947)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -43
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 61
- creating inst add, width 8
before junk removal:
result %294
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 1948)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 61
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -69
- creating inst add, width 8
before junk removal:
result %514
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 1949)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -69
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %470
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 1950)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -6
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 43
- creating inst add, width 8
before junk removal:
result %236
- creating inst and, width 8
before junk removal:
result %237
candidate:
result %237
didn't work for all inputs (#cex: 11, refinement: 1951)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 43
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %486
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1952)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -99
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -22
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %414
- creating inst and, width 8
before junk removal:
result %415
candidate:
result %415
didn't work for all inputs (#cex: 11, refinement: 1953)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -22
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %468
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1954)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -71
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %488
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1955)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 107
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %512
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 1956)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -97
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -15
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %474
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 1957)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -15
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -38
- creating inst add, width 8
before junk removal:
result %450
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 1958)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -38
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -39
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %446
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %447
candidate:
result %447
didn't work for all inputs (#cex: 11, refinement: 1959)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -39
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -41
- creating inst add, width 8
before junk removal:
result %526
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1960)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -41
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -89
- creating inst add, width 8
before junk removal:
result %464
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 1961)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -89
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -49
- creating inst add, width 8
before junk removal:
result %518
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1962)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -49
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -7
- creating inst add, width 8
before junk removal:
result %476
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1963)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -7
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %526
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1964)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -41
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -71
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %468
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1965)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -71
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -19
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %71
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 1966)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -19
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -34
- creating inst add, width 8
before junk removal:
result %480
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 1967)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -34
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %418
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 1968)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 119
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 125
- creating inst add, width 8
before junk removal:
result %266
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 1969)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 125
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %288
- creating inst and, width 8
before junk removal:
result %289
candidate:
result %289
didn't work for all inputs (#cex: 11, refinement: 1970)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 45
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 83
- creating inst add, width 8
before junk removal:
result %400
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1971)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 83
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -101
- creating inst add, width 8
before junk removal:
result %484
- creating inst and, width 8
before junk removal:
result %485
candidate:
result %485
didn't work for all inputs (#cex: 11, refinement: 1972)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -101
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -21
- creating inst add, width 8
before junk removal:
result %508
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 1973)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -21
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -70
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %444
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1974)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -70
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -65
- creating inst add, width 8
before junk removal:
result %510
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 1975)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -65
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -86
- creating inst add, width 8
before junk removal:
result %298
- creating inst and, width 8
before junk removal:
result %299
candidate:
result %299
didn't work for all inputs (#cex: 11, refinement: 1976)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -86
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -25
- creating inst add, width 8
before junk removal:
result %490
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 1977)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -25
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %518
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 1978)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -49
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -36
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %410
- creating inst and, width 8
before junk removal:
result %411
candidate:
result %411
didn't work for all inputs (#cex: 11, refinement: 1979)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -36
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -82
- creating inst add, width 8
before junk removal:
result %494
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1980)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -82
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 115
- creating inst add, width 8
before junk removal:
result %456
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 1981)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 115
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -27
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %462
- creating inst and, width 8
before junk removal:
result %463
candidate:
result %463
didn't work for all inputs (#cex: 11, refinement: 1982)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -27
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -71
- creating inst add, width 8
before junk removal:
result %468
- creating inst and, width 8
before junk removal:
result %469
candidate:
result %469
didn't work for all inputs (#cex: 11, refinement: 1983)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -71
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 87
- creating inst add, width 8
before junk removal:
result %478
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 1984)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 87
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 99
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %352
- creating inst and, width 8
before junk removal:
result %353
candidate:
result %353
didn't work for all inputs (#cex: 11, refinement: 1985)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 99
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 91
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %428
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %429
candidate:
result %429
didn't work for all inputs (#cex: 11, refinement: 1986)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 91
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -45
- creating inst add, width 8
before junk removal:
result %492
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 1987)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -45
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 107
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %488
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 1988)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 107
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %476
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 1989)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -7
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 127
- creating inst add, width 8
before junk removal:
result %246
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 1990)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 127
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -37
- creating inst add, width 8
before junk removal:
result %530
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 1991)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -37
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 119
- creating inst add, width 8
before junk removal:
result %418
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 1992)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 119
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -70
- creating inst add, width 8
before junk removal:
result %444
- creating inst and, width 8
before junk removal:
result %445
candidate:
result %445
didn't work for all inputs (#cex: 11, refinement: 1993)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -70
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %528
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 1994)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -35
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 59
- creating inst add, width 8
before junk removal:
result %330
- creating inst and, width 8
before junk removal:
result %331
candidate:
result %331
didn't work for all inputs (#cex: 11, refinement: 1995)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 59
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %400
- creating inst and, width 8
before junk removal:
result %401
candidate:
result %401
didn't work for all inputs (#cex: 11, refinement: 1996)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 83
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -41
- creating inst add, width 8
before junk removal:
result %526
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 1997)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -41
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -99
- creating inst add, width 8
before junk removal:
result %486
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %487
candidate:
result %487
didn't work for all inputs (#cex: 11, refinement: 1998)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -99
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -82
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %494
- creating inst and, width 8
before junk removal:
result %495
candidate:
result %495
didn't work for all inputs (#cex: 11, refinement: 1999)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -82
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -105
- creating inst add, width 8
before junk removal:
result %502
- creating inst and, width 8
before junk removal:
result %503
candidate:
result %503
didn't work for all inputs (#cex: 11, refinement: 2000)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -105
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -12
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %404
- creating inst and, width 8
before junk removal:
result %405
candidate:
result %405
didn't work for all inputs (#cex: 11, refinement: 2001)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -12
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -97
- creating inst add, width 8
before junk removal:
result %512
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 2002)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -97
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 61
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %294
- creating inst and, width 8
before junk removal:
result %295
candidate:
result %295
didn't work for all inputs (#cex: 11, refinement: 2003)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 61
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -35
- creating inst add, width 8
before junk removal:
result %528
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 2004)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -35
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -19
- creating inst add, width 8
before junk removal:
result %71
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 2005)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -19
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -33
- creating inst add, width 8
before junk removal:
result %532
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 2006)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -33
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -15
- creating inst add, width 8
before junk removal:
result %474
- creating inst and, width 8
before junk removal:
result %475
candidate:
result %475
didn't work for all inputs (#cex: 11, refinement: 2007)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -15
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -83
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %460
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 2008)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -83
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -17
- creating inst add, width 8
before junk removal:
result %206
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 2009)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -17
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -97
- creating inst add, width 8
before junk removal:
result %512
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 2010)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -97
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -77
- creating inst add, width 8
before junk removal:
result %506
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 2011)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -77
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -42
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %436
- creating inst and, width 8
before junk removal:
result %437
candidate:
result %437
didn't work for all inputs (#cex: 11, refinement: 2012)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -42
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 47
- creating inst add, width 8
before junk removal:
result %304
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 2013)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 47
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %500
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 2014)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 123
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %514
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 2015)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -69
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -53
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %466
- creating inst and, width 8
before junk removal:
result %467
candidate:
result %467
didn't work for all inputs (#cex: 11, refinement: 2016)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -53
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %530
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 2017)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -37
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -4
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %368
- creating inst and, width 8
before junk removal:
result %369
candidate:
result %369
didn't work for all inputs (#cex: 11, refinement: 2018)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -4
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %206
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 2019)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -17
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 47
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %304
- creating inst and, width 8
before junk removal:
result %305
candidate:
result %305
didn't work for all inputs (#cex: 11, refinement: 2020)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 47
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -85
- creating inst add, width 8
before junk removal:
result %496
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 2021)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -85
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 107
- creating inst add, width 8
before junk removal:
result %488
- creating inst and, width 8
before junk removal:
result %489
candidate:
result %489
didn't work for all inputs (#cex: 11, refinement: 2022)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 107
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %508
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 2023)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -21
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %524
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 2024)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -67
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -89
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %464
- creating inst and, width 8
before junk removal:
result %465
candidate:
result %465
didn't work for all inputs (#cex: 11, refinement: 2025)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -89
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_2 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 123
- creating inst add, width 8
before junk removal:
result %500
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 2026)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 123
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 90
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %300
- creating inst and, width 8
before junk removal:
result %301
candidate:
result %301
didn't work for all inputs (#cex: 11, refinement: 2027)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 90
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 118
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %440
- creating inst and, width 8
before junk removal:
result %441
candidate:
result %441
didn't work for all inputs (#cex: 11, refinement: 2028)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 118
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -13
- creating inst add, width 8
before junk removal:
result %520
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 2029)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -13
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %161
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 2030)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -3
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 122
- creating inst add, width 8
before junk removal:
result %472
- creating inst and, width 8
before junk removal:
result %473
candidate:
result %473
didn't work for all inputs (#cex: 11, refinement: 2031)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 122
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -74
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %434
- creating inst and, width 8
before junk removal:
result %435
candidate:
result %435
didn't work for all inputs (#cex: 11, refinement: 2032)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -74
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %510
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 2033)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -65
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -5
- creating inst add, width 8
before junk removal:
result %534
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 2034)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -5
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %482
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 2035)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 95
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -35
- creating inst add, width 8
before junk removal:
result %528
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 2036)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -35
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_2 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %532
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 2037)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -33
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -66
- creating inst add, width 8
before junk removal:
result %504
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 2038)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -66
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %534
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 2039)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -5
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_2 (and,i8) 
3	1_0 (add,i8) 2_1 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %246
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 2040)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 127
1_2 (add,i8) == 0_1 (input,i8)
2_2 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 63
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %208
- creating inst and, width 8
before junk removal:
result %209
candidate:
result %209
didn't work for all inputs (#cex: 11, refinement: 2041)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 63
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 109
- creating inst add, width 8
before junk removal:
result %170
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 2042)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 109
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -83
- creating inst add, width 8
before junk removal:
result %460
- creating inst and, width 8
before junk removal:
result %461
candidate:
result %461
didn't work for all inputs (#cex: 11, refinement: 2043)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -83
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -10
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %232
- creating inst and, width 8
before junk removal:
result %233
candidate:
result %233
didn't work for all inputs (#cex: 11, refinement: 2044)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -10
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -37
- creating inst add, width 8
before junk removal:
result %530
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 2045)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -37
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -45
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %492
- creating inst and, width 8
before junk removal:
result %493
candidate:
result %493
didn't work for all inputs (#cex: 11, refinement: 2046)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -45
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 95
- creating inst add, width 8
before junk removal:
result %482
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 2047)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 95
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -18
- creating inst add, width 8
before junk removal:
result %296
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 2048)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -18
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 109
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %170
- creating inst and, width 8
before junk removal:
result %171
candidate:
result %171
didn't work for all inputs (#cex: 11, refinement: 2049)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 109
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 115
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %456
- creating inst and, width 8
before junk removal:
result %457
candidate:
result %457
didn't work for all inputs (#cex: 11, refinement: 2050)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 115
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -29
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %452
- creating inst and, width 8
before junk removal:
result %453
candidate:
result %453
didn't work for all inputs (#cex: 11, refinement: 2051)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -29
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 87
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %478
- creating inst and, width 8
before junk removal:
result %479
candidate:
result %479
didn't work for all inputs (#cex: 11, refinement: 2052)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 87
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -21
- creating inst add, width 8
before junk removal:
result %508
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 2053)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -21
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -38
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %450
- creating inst and, width 8
before junk removal:
result %451
candidate:
result %451
didn't work for all inputs (#cex: 11, refinement: 2054)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -38
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -41
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %526
- creating inst and, width 8
before junk removal:
result %527
candidate:
result %527
didn't work for all inputs (#cex: 11, refinement: 2055)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -41
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -77
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %506
- creating inst and, width 8
before junk removal:
result %507
candidate:
result %507
didn't work for all inputs (#cex: 11, refinement: 2056)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -77
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -6
- creating inst add, width 8
before junk removal:
result %470
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 2057)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -6
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 126
- creating inst add, width 8
before junk removal:
result %292
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 2058)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 126
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 110
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %422
- creating inst and, width 8
before junk removal:
result %423
candidate:
result %423
didn't work for all inputs (#cex: 11, refinement: 2059)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 110
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 103
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %458
- creating inst and, width 8
before junk removal:
result %459
candidate:
result %459
didn't work for all inputs (#cex: 11, refinement: 2060)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 103
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -97
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %512
- creating inst and, width 8
before junk removal:
result %513
candidate:
result %513
didn't work for all inputs (#cex: 11, refinement: 2061)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -97
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 117
- creating inst add, width 8
before junk removal:
result %384
- creating inst and, width 8
before junk removal:
result %385
candidate:
result %385
didn't work for all inputs (#cex: 11, refinement: 2062)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 117
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -33
- creating inst add, width 8
before junk removal:
result %532
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 2063)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -33
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -75
- creating inst add, width 8
before junk removal:
result %426
- creating inst and, width 8
before junk removal:
result %427
candidate:
result %427
didn't work for all inputs (#cex: 11, refinement: 2064)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -75
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -25
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %490
- creating inst and, width 8
before junk removal:
result %491
candidate:
result %491
didn't work for all inputs (#cex: 11, refinement: 2065)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -25
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -66
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %504
- creating inst and, width 8
before junk removal:
result %505
candidate:
result %505
didn't work for all inputs (#cex: 11, refinement: 2066)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -66
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -67
- creating inst add, width 8
before junk removal:
result %524
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 2067)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -67
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -81
- creating inst add, width 8
before junk removal:
result %516
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 2068)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -81
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_2 (const,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -7
- creating inst add, width 8
before junk removal:
result %476
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 2069)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -7
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -51
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %454
- creating inst and, width 8
before junk removal:
result %455
candidate:
result %455
didn't work for all inputs (#cex: 11, refinement: 2070)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -51
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 79
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %412
- creating inst and, width 8
before junk removal:
result %413
candidate:
result %413
didn't work for all inputs (#cex: 11, refinement: 2071)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 79
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -65
- creating inst add, width 8
before junk removal:
result %510
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 2072)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -65
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -19
- creating inst add, width 8
before junk removal:
result %71
- creating inst and, width 8
before junk removal:
result %72
candidate:
result %72
didn't work for all inputs (#cex: 11, refinement: 2073)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -19
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 111
- creating inst add, width 8
before junk removal:
result %448
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 2074)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 111
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -67
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %524
- creating inst and, width 8
before junk removal:
result %525
candidate:
result %525
didn't work for all inputs (#cex: 11, refinement: 2075)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -67
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 94
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %396
- creating inst and, width 8
before junk removal:
result %397
candidate:
result %397
didn't work for all inputs (#cex: 11, refinement: 2076)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 94
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -85
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %496
- creating inst and, width 8
before junk removal:
result %497
candidate:
result %497
didn't work for all inputs (#cex: 11, refinement: 2077)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -85
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -13
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %520
- creating inst and, width 8
before junk removal:
result %521
candidate:
result %521
didn't work for all inputs (#cex: 11, refinement: 2078)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -13
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -49
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %518
- creating inst and, width 8
before junk removal:
result %519
candidate:
result %519
didn't work for all inputs (#cex: 11, refinement: 2079)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -49
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -35
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %528
- creating inst and, width 8
before junk removal:
result %529
candidate:
result %529
didn't work for all inputs (#cex: 11, refinement: 2080)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -35
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 119
- creating inst add, width 8
before junk removal:
result %418
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 2081)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 119
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -73
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %522
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 2082)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -73
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -17
- creating inst add, width 8
before junk removal:
result %206
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 2083)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -17
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 95
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %482
- creating inst and, width 8
before junk removal:
result %483
candidate:
result %483
didn't work for all inputs (#cex: 11, refinement: 2084)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 95
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 111
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %448
- creating inst and, width 8
before junk removal:
result %449
candidate:
result %449
didn't work for all inputs (#cex: 11, refinement: 2085)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 111
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -73
- creating inst add, width 8
before junk removal:
result %522
- creating inst and, width 8
before junk removal:
result %523
candidate:
result %523
didn't work for all inputs (#cex: 11, refinement: 2086)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -73
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -34
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %480
- creating inst and, width 8
before junk removal:
result %481
candidate:
result %481
didn't work for all inputs (#cex: 11, refinement: 2087)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -34
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_1 (add,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 125
- creating inst add, width 8
before junk removal:
result %266
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 2088)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 125
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -69
- creating inst add, width 8
before junk removal:
result %514
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 2089)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -69
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -11
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %73
- creating inst and, width 8
before junk removal:
result %74
candidate:
result %74
didn't work for all inputs (#cex: 11, refinement: 2090)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -11
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 123
- creating inst add, width 8
before junk removal:
result %500
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 2091)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 123
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -18
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %296
- creating inst and, width 8
before junk removal:
result %297
candidate:
result %297
didn't work for all inputs (#cex: 11, refinement: 2092)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -18
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -21
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %508
- creating inst and, width 8
before junk removal:
result %509
candidate:
result %509
didn't work for all inputs (#cex: 11, refinement: 2093)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -21
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -3
- creating inst add, width 8
before junk removal:
result %161
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 2094)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -3
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -5
- creating inst add, width 8
before junk removal:
result %534
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 2095)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -5
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -37
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %530
- creating inst and, width 8
before junk removal:
result %531
candidate:
result %531
didn't work for all inputs (#cex: 11, refinement: 2096)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -37
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 119
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %418
- creating inst and, width 8
before junk removal:
result %419
candidate:
result %419
didn't work for all inputs (#cex: 11, refinement: 2097)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 119
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -6
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %470
- creating inst and, width 8
before junk removal:
result %471
candidate:
result %471
didn't work for all inputs (#cex: 11, refinement: 2098)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -6
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 127
- creating inst add, width 8
before junk removal:
result %246
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 2099)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_1 (input,i8)
1_2 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 127
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -69
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %514
- creating inst and, width 8
before junk removal:
result %515
candidate:
result %515
didn't work for all inputs (#cex: 11, refinement: 2100)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -69
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -81
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %516
- creating inst and, width 8
before junk removal:
result %517
candidate:
result %517
didn't work for all inputs (#cex: 11, refinement: 2101)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -81
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -65
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %510
- creating inst and, width 8
before junk removal:
result %511
candidate:
result %511
didn't work for all inputs (#cex: 11, refinement: 2102)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -65
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -33
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %532
- creating inst and, width 8
before junk removal:
result %533
candidate:
result %533
didn't work for all inputs (#cex: 11, refinement: 2103)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -33
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_3 (const,i8) 2_1 (and,i8) 
2	0_2 (const,i8) 1_1 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 1, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 2, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -17
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %206
- creating inst and, width 8
before junk removal:
result %207
candidate:
result %207
didn't work for all inputs (#cex: 11, refinement: 2104)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -17
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i8) 2_1 (and,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_1 (input,i8) 1_2 (add,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 0, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 123
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 2, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %500
- creating inst and, width 8
before junk removal:
result %501
candidate:
result %501
didn't work for all inputs (#cex: 11, refinement: 2105)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 123
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -7
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %476
- creating inst and, width 8
before junk removal:
result %477
candidate:
result %477
didn't work for all inputs (#cex: 11, refinement: 2106)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -7
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 125
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %266
- creating inst and, width 8
before junk removal:
result %267
candidate:
result %267
didn't work for all inputs (#cex: 11, refinement: 2107)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 125
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 126
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %292
- creating inst and, width 8
before junk removal:
result %293
candidate:
result %293
didn't work for all inputs (#cex: 11, refinement: 2108)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 126
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_2 (const,i8) 1_1 (add,i8) 
1	0_1 (input,i8) 1_2 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 0, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -3
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 1, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %161
- creating inst and, width 8
before junk removal:
result %162
candidate:
result %162
didn't work for all inputs (#cex: 11, refinement: 2109)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -3
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value -5
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %534
- creating inst and, width 8
before junk removal:
result %535
candidate:
result %535
didn't work for all inputs (#cex: 11, refinement: 2110)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == -5
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i8) 1_2 (add,i8) 
1	0_2 (const,i8) 1_1 (add,i8) 
2	0_3 (const,i8) 2_1 (and,i8) 
3	1_0 (add,i8) 2_2 (and,i8) 
4	2_0 (and,i8) 3_0 (output,i8) 
found valid wiring, output 2_0 (and,i8).
creating program from wiring
- starting with OutLoc 2_0 (and,i8), OpLocs { 2_1 (and,i8) 2_2 (and,i8) }
- looking for OpLoc wiring 2_1 (and,i8)
- found wiring input on line 2, taking 0_3 (const,i8)
- continue with OutLoc 0_3 (const,i8), OpLocs {}
- creating constant inst 0_3 (const,i8) with value 0
- looking for OpLoc wiring 2_2 (and,i8)
- found wiring input on line 3, taking 1_0 (add,i8)
- continue with OutLoc 1_0 (add,i8), OpLocs {1_1 (add,i8) 1_2 (add,i8) }
- looking for OpLoc wiring 1_1 (add,i8)
- found wiring input on line 1, taking 0_2 (const,i8)
- continue with OutLoc 0_2 (const,i8), OpLocs {}
- creating constant inst 0_2 (const,i8) with value 127
- looking for OpLoc wiring 1_2 (add,i8)
- found wiring input on line 0, taking 0_1 (input,i8)
- continue with OutLoc 0_1 (input,i8), OpLocs {}
- creating input inst 0_1 (input,i8)
- creating inst add, width 8
before junk removal:
result %246
- creating inst and, width 8
before junk removal:
result %247
candidate:
result %247
didn't work for all inputs (#cex: 11, refinement: 2111)
counterexample: in_0_1 = 1
cand with constants, constraining wiring
3_0 (output,i8) == 2_0 (and,i8)
2_1 (and,i8) == 0_3 (const,i8)
with constant 0_3 (const,i8) == 0
2_2 (and,i8) == 1_0 (add,i8)
1_1 (add,i8) == 0_2 (const,i8)
with constant 0_2 (const,i8) == 127
1_2 (add,i8) == 0_1 (input,i8)
setting input in_0_1 to 1
setting input in_0_1 to -9
setting input in_0_1 to 11
setting input in_0_1 to -117
setting input in_0_1 to 0
setting input in_0_1 to 56
setting input in_0_1 to 19
setting input in_0_1 to 2
setting input in_0_1 to 3
setting input in_0_1 to 23
solving synthesis constraint.. UNSAT
; no valid wiring found
; Failed to infer RHS
