; REQUIRES: solver, solver-model, synthesis

; RUN: %souper-check %solver -infer-rhs -souper-infer-inst -souper-synthesis-ignore-cost -souper-synthesis-comps=sub,xor,xor,and,ule,const %s > %t1
; RUN: FileCheck %s < %t1

; CHECK: {{(%8:i1 = ule %0, %1|%8:i32 = sext %3)?}}
; CHECK: {{(%9:i32 = sext %8|%9:i32 = and %2, %8)?}}
; CHECK: {{(%10:i32 = and %2, %9|%10:i32 = xor %1, %9)?}}
; CHECK: {{(%11:i32 = xor %0, %10|result %10)?}}
; CHECK: result {{(%11|%7)}}

; Compute max of two integers
%0:i32 = var
%1:i32 = var
%2:i32 = xor %0, %1
%3:i1  = ule %1, %0
%4:i32 = zext %3
%5:i32 = sub 0, %4
%6:i32 = and %2, %5
%7:i32 = xor %6, %1
infer %7
